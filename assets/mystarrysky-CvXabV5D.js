import{n as Zt,o as Mt,q as Ue,u as nt,A as it,J as Ce,L as nn,_ as jt,G as gt,z as N,M as Is,N as on,O as Rs,I as Ft,F as xt,P as He,Q as rn,R as _e,S as an,T as ln,B as os,v as ks,y as ot,x as J,V as ut,U as cn,W as hn,X as un,Y as ft,Z as We,$ as rs,a0 as bt,a1 as Se,a2 as St,a3 as be,a4 as Me,a5 as dn,a6 as Ls,a7 as vt,a8 as U,a9 as fn,aa as pn,ab as mn,ac as je,ad as vn,ae as wn,af as yn,ag as gn,ah as xn,ai as bn,aj as Mn,ak as Cn,al as Bt,am as Tt,an as _n,ao as Ne,ap as Sn,aq as de,ar as as,as as ls,at as Ie,au as cs,av as hs,aw as En}from"./index-jm_w3ouH.js";const Tn={class:"dialog-box"},zn={key:0},Pn={key:1},An=Zt({__name:"DialogBox",setup(A,{expose:t}){const e=Mt(0),s=Mt([]);return Ue(()=>{const i=nn();if(i){const o=i.slots;s.value=Object.keys(o).filter(r=>r.startsWith("dialog-"))}}),t({nextDialog:()=>{e.value<s.value.length-1&&e.value++}}),(i,o)=>(nt(),it("div",Tn,[e.value<s.value.length?(nt(),it("div",zn,[Ce(i.$slots,`dialog-${e.value}`)])):(nt(),it("div",Pn,[Ce(i.$slots,"end")]))]))}}),Fn={},Bn={class:"dialog-container1"},Nn={key:0,class:"npc-name"},In={class:"dialog-box1"};function Rn(A,t){return nt(),it("div",Bn,[A.$slots.npcName?(nt(),it("div",Nn,[Ce(A.$slots,"npcName",{},void 0,!0)])):gt("",!0),N("div",In,[Ce(A.$slots,"default",{},void 0,!0)])])}const kn=jt(Fn,[["render",Rn],["__scopeId","data-v-1f610eb4"]]),Ln={class:"selected"},qn={key:0,class:"options"},Dn=["onClick"],On=Zt({__name:"LanguageSwitchergame",setup(A){const{locale:t}=Is(),e=Mt(t.value),s=Mt(!1),n=[{code:"en",name:"English"},{code:"zh",name:"中文"},{code:"ru",name:"Русский"},{code:"ja",name:"日本語"},{code:"fr",name:"Français"},{code:"de",name:"Deutsch"},{code:"al",name:"العربية"},{code:"du",name:"हिन्द"},{code:"xi",name:"español"},{code:"yi",name:"italiano"}],i=on(()=>{const a=n.find(c=>c.code===e.value);return a?a.name:""}),o=()=>{s.value=!s.value},r=a=>{e.value=a.code,t.value=a.code,s.value=!1};return Rs(t,a=>{e.value=a}),(a,c)=>(nt(),it("div",{class:"custom-dropdown",onClick:o},[N("div",Ln,[Ft(xt(i.value)+" ",1),c[0]||(c[0]=N("span",null,[N("div",{class:"i-tabler-world"})],-1))]),s.value?(nt(),it("div",qn,[(nt(),it(He,null,rn(n,u=>N("div",{class:"option",key:u.code,onClick:d=>r(u)},xt(u.name),9,Dn)),64))])):gt("",!0)]))}}),Vn=jt(On,[["__scopeId","data-v-7d2ee18c"]]),Wn={class:"typing-text"},jn=Zt({__name:"TypingText",props:{text:{},speed:{}},emits:["complete"],setup(A,{emit:t}){const e=A,{t:s,locale:n}=Is(),i=Mt(""),o=t,r=async a=>{if(i.value="",!!a){for(let c=0;c<a.length;c++)i.value+=a.charAt(c),await new Promise(u=>setTimeout(u,e.speed||100));o("complete")}};return Ue(async()=>{const a=s(e.text);await r(a)}),Rs(()=>n.value,async(a,c)=>{const u=s(e.text);await r(u)}),(a,c)=>(nt(),it("div",Wn,[N("p",null,xt(i.value),1)]))}}),Gn=jt(jn,[["__scopeId","data-v-862eb528"]]),Un=Zt({__name:"FlyStart",setup(A){const t=Mt(!1),e=_e("toggleMovement"),s=()=>{e?(e(),t.value=!t.value):console.warn("启动失败,下回再来!")};function n(){s()}function i(){s()}return(o,r)=>(nt(),it(He,null,[N("div",{class:"auto-btn",onClick:s},[r[0]||(r[0]=Ft(" Auto ")),N("span",null,[N("div",{class:an(t.value?"i-mdi-robot-off-outline":"i-mdi-robot-outline")},null,2)])]),N("button",{class:"aurora-btn",onMousedown:n,onTouchstart:os(n,["prevent"]),onMouseup:i,onMouseleave:i,onTouchend:os(i,["prevent"])},r[1]||(r[1]=[ln('<svg class="aurora-ring" viewBox="0 0 100 100" data-v-e1550449><defs data-v-e1550449><linearGradient id="auroraGradient" x1="0%" y1="0%" x2="100%" y2="0%" data-v-e1550449><stop offset="0%" stop-color="#20B2AA" data-v-e1550449></stop><stop offset="25%" stop-color="#000000" data-v-e1550449></stop><stop offset="50%" stop-color="#000000" data-v-e1550449></stop><stop offset="75%" stop-color="#000000" data-v-e1550449></stop><stop offset="100%" stop-color="#20B2AA" data-v-e1550449></stop></linearGradient></defs><circle cx="50" cy="50" r="45" fill="none" stroke="url(#auroraGradient)" stroke-width="6" data-v-e1550449></circle></svg>',1)]),32)],64))}}),Hn=jt(Un,[["__scopeId","data-v-e1550449"]]),$n={key:0,style:{margin:"0 auto"}},Yn={key:0,class:"conversation"},Xn={class:"response"},Zn={key:0,class:"conversation"},Kn={class:"options"},Qn={class:"option"},Jn={class:"response-container"},ti={class:"response"},ei={key:0,class:"conversation"},si={class:"options"},ni={class:"option"},ii={class:"response-container"},oi={class:"response"},ri={key:0,class:"conversation"},ai={class:"options"},li={class:"option"},ci={class:"response-container"},hi={class:"response"},ui={key:0,class:"conversation"},di={class:"options"},fi={class:"option"},pi={class:"response-container"},mi={class:"response"},vi={key:0,class:"conversation"},wi={class:"options"},yi={class:"option"},gi={class:"response-container"},xi={class:"response"},bi={key:0,class:"conversation"},Mi={class:"options"},Ci={class:"option"},_i={class:"response-container"},Si={class:"response"},Ei={key:0,class:"conversation"},Ti={class:"options"},zi={class:"option"},Pi={class:"response-container"},Ai={class:"response"},Fi={key:0,class:"conversation"},Bi={class:"options"},Ni={class:"option"},Ii={class:"response-container"},Ri={class:"response"},ki=Zt({__name:"NPCs",setup(A){_e("toggleMovement");const t=_e("handleAfterLeave"),e=()=>{t?t():console.warn("进入主页失败,下回再来!")},s=Mt(null),n=()=>{s.value&&typeof s.value.nextDialog=="function"&&s.value.nextDialog()},i=Mt({conversation:!1,conversation1:!1,conversation2:!1,conversation3:!1,conversation4:!1,conversation5:!1,conversation6:!1,conversation7:!1,conversation8:!1,conversation9:!1,conversation10:!1}),o=(r,a)=>{i.value[r]=a};return(r,a)=>{const c=Hn,u=Gn,d=Vn,h=kn,f=An;return nt(),it(He,null,[i.value.conversation2?(nt(),ks(c,{key:0})):gt("",!0),ot(f,{ref_key:"dialogBoxRef",ref:s},{"dialog-0":J(()=>[a[10]||(a[10]=N("div",null,null,-1)),ot(h,null,{npcName:J(()=>a[9]||(a[9]=[Ft(" PONZS: "),N("span",{style:{color:"#ffc8c8"}}," ( Version: PC-Mobile-VR ) ",-1)])),default:J(()=>[ot(u,{text:"language1",speed:30,onComplete:a[0]||(a[0]=()=>o("conversation",!0))}),i.value.conversation?(nt(),it("div",$n,[ot(d)])):gt("",!0)]),_:1}),i.value.conversation?(nt(),it("div",Yn,[N("div",Xn,[N("p",{style:{"font-size":"15px"},onClick:n},xt(r.$t("language2")),1)])])):gt("",!0)]),"dialog-1":J(()=>[ot(h,null,{npcName:J(()=>a[11]||(a[11]=[Ft(" PONZS: ")])),default:J(()=>[ot(u,{text:"language3",speed:30,onComplete:a[1]||(a[1]=()=>o("conversation1",!0))})]),_:1}),i.value.conversation1?(nt(),it("div",Zn,[N("div",Kn,[N("div",Qn,[N("div",Jn,[N("div",ti,[N("p",{style:{"font-size":"15px"},onClick:n},xt(r.$t("next")),1)])])])])])):gt("",!0)]),"dialog-2":J(()=>[ot(h,null,{npcName:J(()=>a[12]||(a[12]=[Ft(" PONZS: ")])),default:J(()=>[ot(u,{text:"language4",speed:30,onComplete:a[2]||(a[2]=()=>o("conversation2",!0))})]),_:1}),i.value.conversation2?(nt(),it("div",ei,[N("div",si,[N("div",ni,[N("div",ii,[N("div",oi,[N("p",{style:{"font-size":"15px"},onClick:n},xt(r.$t("next")),1)])])])])])):gt("",!0)]),"dialog-3":J(()=>[ot(h,null,{npcName:J(()=>a[13]||(a[13]=[Ft(" PONZS: ")])),default:J(()=>[ot(u,{text:"language8",speed:30,onComplete:a[3]||(a[3]=()=>o("conversation3",!0))})]),_:1}),i.value.conversation3?(nt(),it("div",ri,[N("div",ai,[N("div",li,[N("div",ci,[N("div",hi,[N("p",{style:{"font-size":"15px"},onClick:n},xt(r.$t("next")),1)])])])])])):gt("",!0)]),"dialog-4":J(()=>[ot(h,null,{npcName:J(()=>a[14]||(a[14]=[Ft(" PONZS: ")])),default:J(()=>[ot(u,{text:"language9",speed:30,onComplete:a[4]||(a[4]=()=>o("conversation4",!0))})]),_:1}),i.value.conversation4?(nt(),it("div",ui,[N("div",di,[N("div",fi,[N("div",pi,[N("div",mi,[N("p",{style:{"font-size":"15px"},onClick:n},xt(r.$t("next")),1)])])])])])):gt("",!0)]),"dialog-5":J(()=>[ot(h,null,{npcName:J(()=>a[15]||(a[15]=[Ft(" PONZS: ")])),default:J(()=>[ot(u,{text:"language10",speed:30,onComplete:a[5]||(a[5]=()=>o("conversation5",!0))})]),_:1}),i.value.conversation5?(nt(),it("div",vi,[N("div",wi,[N("div",yi,[N("div",gi,[N("div",xi,[N("p",{style:{"font-size":"15px"},onClick:n},xt(r.$t("next")),1)])])])])])):gt("",!0)]),"dialog-6":J(()=>[ot(h,null,{npcName:J(()=>a[16]||(a[16]=[Ft(" PONZS: ")])),default:J(()=>[ot(u,{text:"language11",speed:30,onComplete:a[6]||(a[6]=()=>o("conversation6",!0))})]),_:1}),i.value.conversation6?(nt(),it("div",bi,[N("div",Mi,[N("div",Ci,[N("div",_i,[N("div",Si,[N("p",{style:{"font-size":"15px"},onClick:n},xt(r.$t("next")),1)])])])])])):gt("",!0)]),"dialog-7":J(()=>[ot(h,null,{npcName:J(()=>a[17]||(a[17]=[N("div",{style:{color:"#ffc8c8"}},"John:",-1)])),default:J(()=>[ot(u,{text:"language12",speed:30,onComplete:a[7]||(a[7]=()=>o("conversation7",!0))})]),_:1}),i.value.conversation7?(nt(),it("div",Ei,[N("div",Ti,[N("div",zi,[N("div",Pi,[N("div",Ai,[N("p",{style:{"font-size":"15px"},onClick:n},xt(r.$t("next")),1)])])])])])):gt("",!0)]),"dialog-8":J(()=>[ot(h,null,{npcName:J(()=>a[18]||(a[18]=[Ft(" PONZS: ")])),default:J(()=>[ot(u,{text:"language13",speed:30,onComplete:a[8]||(a[8]=()=>o("conversation8",!0))})]),_:1}),i.value.conversation8?(nt(),it("div",Fi,[N("div",Bi,[N("div",Ni,[N("div",Ii,[N("div",Ri,[N("p",{style:{"font-size":"15px"},onClick:e},xt(r.$t("enter")),1)])])])])])):gt("",!0)]),_:1},512)],64)}}}),Li=jt(ki,[["__scopeId","data-v-aee95a94"]]),Ut=new hn(0,0,0,"YXZ"),Ht=new ut,qi={type:"change"},Di={type:"lock"},Oi={type:"unlock"},us=Math.PI/2;class Vi extends cn{constructor(t,e=null){super(t,e),this.isLocked=!1,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.pointerSpeed=1,this._onMouseMove=Wi.bind(this),this._onPointerlockChange=ji.bind(this),this._onPointerlockError=Gi.bind(this),this.domElement!==null&&this.connect()}connect(){this.domElement.ownerDocument.addEventListener("mousemove",this._onMouseMove),this.domElement.ownerDocument.addEventListener("pointerlockchange",this._onPointerlockChange),this.domElement.ownerDocument.addEventListener("pointerlockerror",this._onPointerlockError)}disconnect(){this.domElement.ownerDocument.removeEventListener("mousemove",this._onMouseMove),this.domElement.ownerDocument.removeEventListener("pointerlockchange",this._onPointerlockChange),this.domElement.ownerDocument.removeEventListener("pointerlockerror",this._onPointerlockError)}dispose(){this.disconnect()}getObject(){return console.warn("THREE.PointerLockControls: getObject() has been deprecated. Use controls.object instead."),this.object}getDirection(t){return t.set(0,0,-1).applyQuaternion(this.object.quaternion)}moveForward(t){if(this.enabled===!1)return;const e=this.object;Ht.setFromMatrixColumn(e.matrix,0),Ht.crossVectors(e.up,Ht),e.position.addScaledVector(Ht,t)}moveRight(t){if(this.enabled===!1)return;const e=this.object;Ht.setFromMatrixColumn(e.matrix,0),e.position.addScaledVector(Ht,t)}lock(){this.domElement.requestPointerLock()}unlock(){this.domElement.ownerDocument.exitPointerLock()}}function Wi(A){if(this.enabled===!1||this.isLocked===!1)return;const t=this.object;Ut.setFromQuaternion(t.quaternion),Ut.y-=A.movementX*.002*this.pointerSpeed,Ut.x-=A.movementY*.002*this.pointerSpeed,Ut.x=Math.max(us-this.maxPolarAngle,Math.min(us-this.minPolarAngle,Ut.x)),t.quaternion.setFromEuler(Ut),this.dispatchEvent(qi)}function ji(){this.domElement.ownerDocument.pointerLockElement===this.domElement?(this.dispatchEvent(Di),this.isLocked=!0):(this.dispatchEvent(Oi),this.isLocked=!1)}function Gi(){console.error("THREE.PointerLockControls: Unable to use Pointer Lock API")}const qs={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class Kt{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const Ui=new un(-1,1,1,-1,0,1);class Hi extends We{constructor(){super(),this.setAttribute("position",new rs([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new rs([0,2,0,0,2,0],2))}}const $i=new Hi;class $e{constructor(t){this._mesh=new ft($i,t)}dispose(){this._mesh.geometry.dispose()}render(t){t.render(this._mesh,Ui)}get material(){return this._mesh.material}set material(t){this._mesh.material=t}}class Ge extends Kt{constructor(t,e){super(),this.textureID=e!==void 0?e:"tDiffuse",t instanceof bt?(this.uniforms=t.uniforms,this.material=t):t&&(this.uniforms=Se.clone(t.uniforms),this.material=new bt({name:t.name!==void 0?t.name:"unspecified",defines:Object.assign({},t.defines),uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader})),this.fsQuad=new $e(this.material)}render(t,e,s){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=s.texture),this.fsQuad.material=this.material,this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(e),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),this.fsQuad.render(t))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}class ds extends Kt{constructor(t,e){super(),this.scene=t,this.camera=e,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(t,e,s){const n=t.getContext(),i=t.state;i.buffers.color.setMask(!1),i.buffers.depth.setMask(!1),i.buffers.color.setLocked(!0),i.buffers.depth.setLocked(!0);let o,r;this.inverse?(o=0,r=1):(o=1,r=0),i.buffers.stencil.setTest(!0),i.buffers.stencil.setOp(n.REPLACE,n.REPLACE,n.REPLACE),i.buffers.stencil.setFunc(n.ALWAYS,o,4294967295),i.buffers.stencil.setClear(r),i.buffers.stencil.setLocked(!0),t.setRenderTarget(s),this.clear&&t.clear(),t.render(this.scene,this.camera),t.setRenderTarget(e),this.clear&&t.clear(),t.render(this.scene,this.camera),i.buffers.color.setLocked(!1),i.buffers.depth.setLocked(!1),i.buffers.color.setMask(!0),i.buffers.depth.setMask(!0),i.buffers.stencil.setLocked(!1),i.buffers.stencil.setFunc(n.EQUAL,1,4294967295),i.buffers.stencil.setOp(n.KEEP,n.KEEP,n.KEEP),i.buffers.stencil.setLocked(!0)}}class Yi extends Kt{constructor(){super(),this.needsSwap=!1}render(t){t.state.buffers.stencil.setLocked(!1),t.state.buffers.stencil.setTest(!1)}}class Xi{constructor(t,e){if(this.renderer=t,this._pixelRatio=t.getPixelRatio(),e===void 0){const s=t.getSize(new St);this._width=s.width,this._height=s.height,e=new be(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Me}),e.texture.name="EffectComposer.rt1"}else this._width=e.width,this._height=e.height;this.renderTarget1=e,this.renderTarget2=e.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new Ge(qs),this.copyPass.material.blending=dn,this.clock=new Ls}swapBuffers(){const t=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=t}addPass(t){this.passes.push(t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(t,e){this.passes.splice(e,0,t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(t){const e=this.passes.indexOf(t);e!==-1&&this.passes.splice(e,1)}isLastEnabledPass(t){for(let e=t+1;e<this.passes.length;e++)if(this.passes[e].enabled)return!1;return!0}render(t){t===void 0&&(t=this.clock.getDelta());const e=this.renderer.getRenderTarget();let s=!1;for(let n=0,i=this.passes.length;n<i;n++){const o=this.passes[n];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(n),o.render(this.renderer,this.writeBuffer,this.readBuffer,t,s),o.needsSwap){if(s){const r=this.renderer.getContext(),a=this.renderer.state.buffers.stencil;a.setFunc(r.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,t),a.setFunc(r.EQUAL,1,4294967295)}this.swapBuffers()}ds!==void 0&&(o instanceof ds?s=!0:o instanceof Yi&&(s=!1))}}this.renderer.setRenderTarget(e)}reset(t){if(t===void 0){const e=this.renderer.getSize(new St);this._pixelRatio=this.renderer.getPixelRatio(),this._width=e.width,this._height=e.height,t=this.renderTarget1.clone(),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(t,e){this._width=t,this._height=e;const s=this._width*this._pixelRatio,n=this._height*this._pixelRatio;this.renderTarget1.setSize(s,n),this.renderTarget2.setSize(s,n);for(let i=0;i<this.passes.length;i++)this.passes[i].setSize(s,n)}setPixelRatio(t){this._pixelRatio=t,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class Zi extends Kt{constructor(t,e,s=null,n=null,i=null){super(),this.scene=t,this.camera=e,this.overrideMaterial=s,this.clearColor=n,this.clearAlpha=i,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new vt}render(t,e,s){const n=t.autoClear;t.autoClear=!1;let i,o;this.overrideMaterial!==null&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(t.getClearColor(this._oldClearColor),t.setClearColor(this.clearColor,t.getClearAlpha())),this.clearAlpha!==null&&(i=t.getClearAlpha(),t.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&t.clearDepth(),t.setRenderTarget(this.renderToScreen?null:s),this.clear===!0&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),t.render(this.scene,this.camera),this.clearColor!==null&&t.setClearColor(this._oldClearColor),this.clearAlpha!==null&&t.setClearAlpha(i),this.overrideMaterial!==null&&(this.scene.overrideMaterial=o),t.autoClear=n}}const Ki={uniforms:{tDiffuse:{value:null},tDisp:{value:null},byp:{value:0},amount:{value:.08},angle:{value:.02},seed:{value:.02},seed_x:{value:.02},seed_y:{value:.02},distortion_x:{value:.5},distortion_y:{value:.6},col_s:{value:.05}},vertexShader:`

		varying vec2 vUv;
		void main() {
			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
		}`,fragmentShader:`

		uniform int byp; //should we apply the glitch ?

		uniform sampler2D tDiffuse;
		uniform sampler2D tDisp;

		uniform float amount;
		uniform float angle;
		uniform float seed;
		uniform float seed_x;
		uniform float seed_y;
		uniform float distortion_x;
		uniform float distortion_y;
		uniform float col_s;

		varying vec2 vUv;


		float rand(vec2 co){
			return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
		}

		void main() {
			if(byp<1) {
				vec2 p = vUv;
				float xs = floor(gl_FragCoord.x / 0.5);
				float ys = floor(gl_FragCoord.y / 0.5);
				//based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch
				float disp = texture2D(tDisp, p*seed*seed).r;
				if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {
					if(seed_x>0.){
						p.y = 1. - (p.y + distortion_y);
					}
					else {
						p.y = distortion_y;
					}
				}
				if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {
					if(seed_y>0.){
						p.x=distortion_x;
					}
					else {
						p.x = 1. - (p.x + distortion_x);
					}
				}
				p.x+=disp*seed_x*(seed/5.);
				p.y+=disp*seed_y*(seed/5.);
				//base from RGB shift shader
				vec2 offset = amount * vec2( cos(angle), sin(angle));
				vec4 cr = texture2D(tDiffuse, p + offset);
				vec4 cga = texture2D(tDiffuse, p);
				vec4 cb = texture2D(tDiffuse, p - offset);
				gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);
				//add noise
				vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);
				gl_FragColor = gl_FragColor+ snow;
			}
			else {
				gl_FragColor=texture2D (tDiffuse, vUv);
			}
		}`};class Qi extends Kt{constructor(t=64){super();const e=Ki;this.uniforms=Se.clone(e.uniforms),this.heightMap=this.generateHeightmap(t),this.uniforms.tDisp.value=this.heightMap,this.material=new bt({uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader}),this.fsQuad=new $e(this.material),this.goWild=!1,this.curF=0,this.generateTrigger()}render(t,e,s){this.uniforms.tDiffuse.value=s.texture,this.uniforms.seed.value=Math.random(),this.uniforms.byp.value=0,this.curF%this.randX==0||this.goWild==!0?(this.uniforms.amount.value=Math.random()/30,this.uniforms.angle.value=U.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=U.randFloat(-1,1),this.uniforms.seed_y.value=U.randFloat(-1,1),this.uniforms.distortion_x.value=U.randFloat(0,1),this.uniforms.distortion_y.value=U.randFloat(0,1),this.curF=0,this.generateTrigger()):this.curF%this.randX<this.randX/5?(this.uniforms.amount.value=Math.random()/90,this.uniforms.angle.value=U.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=U.randFloat(0,1),this.uniforms.distortion_y.value=U.randFloat(0,1),this.uniforms.seed_x.value=U.randFloat(-.3,.3),this.uniforms.seed_y.value=U.randFloat(-.3,.3)):this.goWild==!1&&(this.uniforms.byp.value=1),this.curF++,this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(e),this.clear&&t.clear(),this.fsQuad.render(t))}generateTrigger(){this.randX=U.randInt(120,240)}generateHeightmap(t){const e=new Float32Array(t*t),s=t*t;for(let i=0;i<s;i++){const o=U.randFloat(0,1);e[i]=o}const n=new fn(e,t,t,pn,mn);return n.needsUpdate=!0,n}dispose(){this.material.dispose(),this.heightMap.dispose(),this.fsQuad.dispose()}}const Ji={name:"LuminosityHighPassShader",shaderID:"luminosityHighPass",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new vt(0)},defaultOpacity:{value:0}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;

			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform vec3 defaultColor;
		uniform float defaultOpacity;
		uniform float luminosityThreshold;
		uniform float smoothWidth;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );

			float v = luminance( texel.xyz );

			vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );

			float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );

			gl_FragColor = mix( outputColor, texel, alpha );

		}`};class Xt extends Kt{constructor(t,e,s,n){super(),this.strength=e!==void 0?e:1,this.radius=s,this.threshold=n,this.resolution=t!==void 0?new St(t.x,t.y):new St(256,256),this.clearColor=new vt(0,0,0),this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;let i=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2);this.renderTargetBright=new be(i,o,{type:Me}),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(let d=0;d<this.nMips;d++){const h=new be(i,o,{type:Me});h.texture.name="UnrealBloomPass.h"+d,h.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(h);const f=new be(i,o,{type:Me});f.texture.name="UnrealBloomPass.v"+d,f.texture.generateMipmaps=!1,this.renderTargetsVertical.push(f),i=Math.round(i/2),o=Math.round(o/2)}const r=Ji;this.highPassUniforms=Se.clone(r.uniforms),this.highPassUniforms.luminosityThreshold.value=n,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new bt({uniforms:this.highPassUniforms,vertexShader:r.vertexShader,fragmentShader:r.fragmentShader}),this.separableBlurMaterials=[];const a=[3,5,7,9,11];i=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2);for(let d=0;d<this.nMips;d++)this.separableBlurMaterials.push(this.getSeparableBlurMaterial(a[d])),this.separableBlurMaterials[d].uniforms.invSize.value=new St(1/i,1/o),i=Math.round(i/2),o=Math.round(o/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=e,this.compositeMaterial.uniforms.bloomRadius.value=.1;const c=[1,.8,.6,.4,.2];this.compositeMaterial.uniforms.bloomFactors.value=c,this.bloomTintColors=[new ut(1,1,1),new ut(1,1,1),new ut(1,1,1),new ut(1,1,1),new ut(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors;const u=qs;this.copyUniforms=Se.clone(u.uniforms),this.blendMaterial=new bt({uniforms:this.copyUniforms,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,blending:je,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this._oldClearColor=new vt,this.oldClearAlpha=1,this.basic=new vn,this.fsQuad=new $e(null)}dispose(){for(let t=0;t<this.renderTargetsHorizontal.length;t++)this.renderTargetsHorizontal[t].dispose();for(let t=0;t<this.renderTargetsVertical.length;t++)this.renderTargetsVertical[t].dispose();this.renderTargetBright.dispose();for(let t=0;t<this.separableBlurMaterials.length;t++)this.separableBlurMaterials[t].dispose();this.compositeMaterial.dispose(),this.blendMaterial.dispose(),this.basic.dispose(),this.fsQuad.dispose()}setSize(t,e){let s=Math.round(t/2),n=Math.round(e/2);this.renderTargetBright.setSize(s,n);for(let i=0;i<this.nMips;i++)this.renderTargetsHorizontal[i].setSize(s,n),this.renderTargetsVertical[i].setSize(s,n),this.separableBlurMaterials[i].uniforms.invSize.value=new St(1/s,1/n),s=Math.round(s/2),n=Math.round(n/2)}render(t,e,s,n,i){t.getClearColor(this._oldClearColor),this.oldClearAlpha=t.getClearAlpha();const o=t.autoClear;t.autoClear=!1,t.setClearColor(this.clearColor,0),i&&t.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=s.texture,t.setRenderTarget(null),t.clear(),this.fsQuad.render(t)),this.highPassUniforms.tDiffuse.value=s.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,t.setRenderTarget(this.renderTargetBright),t.clear(),this.fsQuad.render(t);let r=this.renderTargetBright;for(let a=0;a<this.nMips;a++)this.fsQuad.material=this.separableBlurMaterials[a],this.separableBlurMaterials[a].uniforms.colorTexture.value=r.texture,this.separableBlurMaterials[a].uniforms.direction.value=Xt.BlurDirectionX,t.setRenderTarget(this.renderTargetsHorizontal[a]),t.clear(),this.fsQuad.render(t),this.separableBlurMaterials[a].uniforms.colorTexture.value=this.renderTargetsHorizontal[a].texture,this.separableBlurMaterials[a].uniforms.direction.value=Xt.BlurDirectionY,t.setRenderTarget(this.renderTargetsVertical[a]),t.clear(),this.fsQuad.render(t),r=this.renderTargetsVertical[a];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,t.setRenderTarget(this.renderTargetsHorizontal[0]),t.clear(),this.fsQuad.render(t),this.fsQuad.material=this.blendMaterial,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,i&&t.state.buffers.stencil.setTest(!0),this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(s),this.fsQuad.render(t)),t.setClearColor(this._oldClearColor,this.oldClearAlpha),t.autoClear=o}getSeparableBlurMaterial(t){const e=[];for(let s=0;s<t;s++)e.push(.39894*Math.exp(-.5*s*s/(t*t))/t);return new bt({defines:{KERNEL_RADIUS:t},uniforms:{colorTexture:{value:null},invSize:{value:new St(.5,.5)},direction:{value:new St(.5,.5)},gaussianCoefficients:{value:e}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`#include <common>
				varying vec2 vUv;
				uniform sampler2D colorTexture;
				uniform vec2 invSize;
				uniform vec2 direction;
				uniform float gaussianCoefficients[KERNEL_RADIUS];

				void main() {
					float weightSum = gaussianCoefficients[0];
					vec3 diffuseSum = texture2D( colorTexture, vUv ).rgb * weightSum;
					for( int i = 1; i < KERNEL_RADIUS; i ++ ) {
						float x = float(i);
						float w = gaussianCoefficients[i];
						vec2 uvOffset = direction * invSize * x;
						vec3 sample1 = texture2D( colorTexture, vUv + uvOffset ).rgb;
						vec3 sample2 = texture2D( colorTexture, vUv - uvOffset ).rgb;
						diffuseSum += (sample1 + sample2) * w;
						weightSum += 2.0 * w;
					}
					gl_FragColor = vec4(diffuseSum/weightSum, 1.0);
				}`})}getCompositeMaterial(t){return new bt({defines:{NUM_MIPS:t},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;
				uniform sampler2D blurTexture1;
				uniform sampler2D blurTexture2;
				uniform sampler2D blurTexture3;
				uniform sampler2D blurTexture4;
				uniform sampler2D blurTexture5;
				uniform float bloomStrength;
				uniform float bloomRadius;
				uniform float bloomFactors[NUM_MIPS];
				uniform vec3 bloomTintColors[NUM_MIPS];

				float lerpBloomFactor(const in float factor) {
					float mirrorFactor = 1.2 - factor;
					return mix(factor, mirrorFactor, bloomRadius);
				}

				void main() {
					gl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +
						lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +
						lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +
						lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +
						lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );
				}`})}}Xt.BlurDirectionX=new St(1,0);Xt.BlurDirectionY=new St(0,1);class Et{constructor(t){t===void 0&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){t===void 0&&(t=new l);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){e===void 0&&(e=new l);const s=this.elements,n=t.x,i=t.y,o=t.z;return e.x=s[0]*n+s[1]*i+s[2]*o,e.y=s[3]*n+s[4]*i+s[5]*o,e.z=s[6]*n+s[7]*i+s[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){e===void 0&&(e=new Et);const s=this.elements,n=t.elements,i=e.elements,o=s[0],r=s[1],a=s[2],c=s[3],u=s[4],d=s[5],h=s[6],f=s[7],p=s[8],w=n[0],v=n[1],y=n[2],m=n[3],x=n[4],b=n[5],_=n[6],C=n[7],B=n[8];return i[0]=o*w+r*m+a*_,i[1]=o*v+r*x+a*C,i[2]=o*y+r*b+a*B,i[3]=c*w+u*m+d*_,i[4]=c*v+u*x+d*C,i[5]=c*y+u*b+d*B,i[6]=h*w+f*m+p*_,i[7]=h*v+f*x+p*C,i[8]=h*y+f*b+p*B,e}scale(t,e){e===void 0&&(e=new Et);const s=this.elements,n=e.elements;for(let i=0;i!==3;i++)n[3*i+0]=t.x*s[3*i+0],n[3*i+1]=t.y*s[3*i+1],n[3*i+2]=t.z*s[3*i+2];return e}solve(t,e){e===void 0&&(e=new l);const s=3,n=4,i=[];let o,r;for(o=0;o<s*n;o++)i.push(0);for(o=0;o<3;o++)for(r=0;r<3;r++)i[o+n*r]=this.elements[o+3*r];i[3+4*0]=t.x,i[3+4*1]=t.y,i[3+4*2]=t.z;let a=3;const c=a;let u;const d=4;let h;do{if(o=c-a,i[o+n*o]===0){for(r=o+1;r<c;r++)if(i[o+n*r]!==0){u=d;do h=d-u,i[h+n*o]+=i[h+n*r];while(--u);break}}if(i[o+n*o]!==0)for(r=o+1;r<c;r++){const f=i[o+n*r]/i[o+n*o];u=d;do h=d-u,i[h+n*r]=h<=o?0:i[h+n*r]-i[h+n*o]*f;while(--u)}}while(--a);if(e.z=i[2*n+3]/i[2*n+2],e.y=(i[1*n+3]-i[1*n+2]*e.z)/i[1*n+1],e.x=(i[0*n+3]-i[0*n+2]*e.z-i[0*n+1]*e.y)/i[0*n+0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,s){if(s===void 0)return this.elements[e+3*t];this.elements[e+3*t]=s}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";const e=",";for(let s=0;s<9;s++)t+=this.elements[s]+e;return t}reverse(t){t===void 0&&(t=new Et);const e=3,s=6,n=to;let i,o;for(i=0;i<3;i++)for(o=0;o<3;o++)n[i+s*o]=this.elements[i+3*o];n[3+6*0]=1,n[3+6*1]=0,n[3+6*2]=0,n[4+6*0]=0,n[4+6*1]=1,n[4+6*2]=0,n[5+6*0]=0,n[5+6*1]=0,n[5+6*2]=1;let r=3;const a=r;let c;const u=s;let d;do{if(i=a-r,n[i+s*i]===0){for(o=i+1;o<a;o++)if(n[i+s*o]!==0){c=u;do d=u-c,n[d+s*i]+=n[d+s*o];while(--c);break}}if(n[i+s*i]!==0)for(o=i+1;o<a;o++){const h=n[i+s*o]/n[i+s*i];c=u;do d=u-c,n[d+s*o]=d<=i?0:n[d+s*o]-n[d+s*i]*h;while(--c)}}while(--r);i=2;do{o=i-1;do{const h=n[i+s*o]/n[i+s*i];c=s;do d=s-c,n[d+s*o]=n[d+s*o]-n[d+s*i]*h;while(--c)}while(o--)}while(--i);i=2;do{const h=1/n[i+s*i];c=s;do d=s-c,n[d+s*i]=n[d+s*i]*h;while(--c)}while(i--);i=2;do{o=2;do{if(d=n[e+o+s*i],isNaN(d)||d===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(i,o,d)}while(o--)}while(i--);return t}setRotationFromQuaternion(t){const e=t.x,s=t.y,n=t.z,i=t.w,o=e+e,r=s+s,a=n+n,c=e*o,u=e*r,d=e*a,h=s*r,f=s*a,p=n*a,w=i*o,v=i*r,y=i*a,m=this.elements;return m[3*0+0]=1-(h+p),m[3*0+1]=u-y,m[3*0+2]=d+v,m[3*1+0]=u+y,m[3*1+1]=1-(c+p),m[3*1+2]=f-w,m[3*2+0]=d-v,m[3*2+1]=f+w,m[3*2+2]=1-(c+h),this}transpose(t){t===void 0&&(t=new Et);const e=this.elements,s=t.elements;let n;return s[0]=e[0],s[4]=e[4],s[8]=e[8],n=e[1],s[1]=e[3],s[3]=n,n=e[2],s[2]=e[6],s[6]=n,n=e[5],s[5]=e[7],s[7]=n,t}}const to=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class l{constructor(t,e,s){t===void 0&&(t=0),e===void 0&&(e=0),s===void 0&&(s=0),this.x=t,this.y=e,this.z=s}cross(t,e){e===void 0&&(e=new l);const s=t.x,n=t.y,i=t.z,o=this.x,r=this.y,a=this.z;return e.x=r*i-a*n,e.y=a*s-o*i,e.z=o*n-r*s,e}set(t,e,s){return this.x=t,this.y=e,this.z=s,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(e)e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z;else return new l(this.x+t.x,this.y+t.y,this.z+t.z)}vsub(t,e){if(e)e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z;else return new l(this.x-t.x,this.y-t.y,this.z-t.z)}crossmat(){return new Et([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,s=this.z,n=Math.sqrt(t*t+e*e+s*s);if(n>0){const i=1/n;this.x*=i,this.y*=i,this.z*=i}else this.x=0,this.y=0,this.z=0;return n}unit(t){t===void 0&&(t=new l);const e=this.x,s=this.y,n=this.z;let i=Math.sqrt(e*e+s*s+n*n);return i>0?(i=1/i,t.x=e*i,t.y=s*i,t.z=n*i):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,s=this.z;return Math.sqrt(t*t+e*e+s*s)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,s=this.y,n=this.z,i=t.x,o=t.y,r=t.z;return Math.sqrt((i-e)*(i-e)+(o-s)*(o-s)+(r-n)*(r-n))}distanceSquared(t){const e=this.x,s=this.y,n=this.z,i=t.x,o=t.y,r=t.z;return(i-e)*(i-e)+(o-s)*(o-s)+(r-n)*(r-n)}scale(t,e){e===void 0&&(e=new l);const s=this.x,n=this.y,i=this.z;return e.x=t*s,e.y=t*n,e.z=t*i,e}vmul(t,e){return e===void 0&&(e=new l),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,s){return s===void 0&&(s=new l),s.x=this.x+t*e.x,s.y=this.y+t*e.y,s.z=this.z+t*e.z,s}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t){return t===void 0&&(t=new l),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const s=this.length();if(s>0){const n=eo,i=1/s;n.set(this.x*i,this.y*i,this.z*i);const o=so;Math.abs(n.x)<.9?(o.set(1,0,0),n.cross(o,t)):(o.set(0,1,0),n.cross(o,t)),n.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,s){const n=this.x,i=this.y,o=this.z;s.x=n+(t.x-n)*e,s.y=i+(t.y-i)*e,s.z=o+(t.z-o)*e}almostEquals(t,e){return e===void 0&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return t===void 0&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(fs),fs.almostEquals(t,e)}clone(){return new l(this.x,this.y,this.z)}}l.ZERO=new l(0,0,0);l.UNIT_X=new l(1,0,0);l.UNIT_Y=new l(0,1,0);l.UNIT_Z=new l(0,0,1);const eo=new l,so=new l,fs=new l;class Ct{constructor(t){t===void 0&&(t={}),this.lowerBound=new l,this.upperBound=new l,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,s,n){const i=this.lowerBound,o=this.upperBound,r=s;i.copy(t[0]),r&&r.vmult(i,i),o.copy(i);for(let a=1;a<t.length;a++){let c=t[a];r&&(r.vmult(c,ps),c=ps),c.x>o.x&&(o.x=c.x),c.x<i.x&&(i.x=c.x),c.y>o.y&&(o.y=c.y),c.y<i.y&&(i.y=c.y),c.z>o.z&&(o.z=c.z),c.z<i.z&&(i.z=c.z)}return e&&(e.vadd(i,i),e.vadd(o,o)),n&&(i.x-=n,i.y-=n,i.z-=n,o.x+=n,o.y+=n,o.z+=n),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new Ct().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,s=this.upperBound,n=t.lowerBound,i=t.upperBound,o=n.x<=s.x&&s.x<=i.x||e.x<=i.x&&i.x<=s.x,r=n.y<=s.y&&s.y<=i.y||e.y<=i.y&&i.y<=s.y,a=n.z<=s.z&&s.z<=i.z||e.z<=i.z&&i.z<=s.z;return o&&r&&a}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,s=this.upperBound,n=t.lowerBound,i=t.upperBound;return e.x<=n.x&&s.x>=i.x&&e.y<=n.y&&s.y>=i.y&&e.z<=n.z&&s.z>=i.z}getCorners(t,e,s,n,i,o,r,a){const c=this.lowerBound,u=this.upperBound;t.copy(c),e.set(u.x,c.y,c.z),s.set(u.x,u.y,c.z),n.set(c.x,u.y,u.z),i.set(u.x,c.y,u.z),o.set(c.x,u.y,c.z),r.set(c.x,c.y,u.z),a.copy(u)}toLocalFrame(t,e){const s=ms,n=s[0],i=s[1],o=s[2],r=s[3],a=s[4],c=s[5],u=s[6],d=s[7];this.getCorners(n,i,o,r,a,c,u,d);for(let h=0;h!==8;h++){const f=s[h];t.pointToLocal(f,f)}return e.setFromPoints(s)}toWorldFrame(t,e){const s=ms,n=s[0],i=s[1],o=s[2],r=s[3],a=s[4],c=s[5],u=s[6],d=s[7];this.getCorners(n,i,o,r,a,c,u,d);for(let h=0;h!==8;h++){const f=s[h];t.pointToWorld(f,f)}return e.setFromPoints(s)}overlapsRay(t){const{direction:e,from:s}=t,n=1/e.x,i=1/e.y,o=1/e.z,r=(this.lowerBound.x-s.x)*n,a=(this.upperBound.x-s.x)*n,c=(this.lowerBound.y-s.y)*i,u=(this.upperBound.y-s.y)*i,d=(this.lowerBound.z-s.z)*o,h=(this.upperBound.z-s.z)*o,f=Math.max(Math.max(Math.min(r,a),Math.min(c,u)),Math.min(d,h)),p=Math.min(Math.min(Math.max(r,a),Math.max(c,u)),Math.max(d,h));return!(p<0||f>p)}}const ps=new l,ms=[new l,new l,new l,new l,new l,new l,new l,new l];class vs{constructor(){this.matrix=[]}get(t,e){let{index:s}=t,{index:n}=e;if(n>s){const i=n;n=s,s=i}return this.matrix[(s*(s+1)>>1)+n-1]}set(t,e,s){let{index:n}=t,{index:i}=e;if(i>n){const o=i;i=n,n=o}this.matrix[(n*(n+1)>>1)+i-1]=s?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class Ds{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const s=this._listeners;return s[t]===void 0&&(s[t]=[]),s[t].includes(e)||s[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const s=this._listeners;return!!(s[t]!==void 0&&s[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const s=this._listeners;if(s[t]===void 0)return this;const n=s[t].indexOf(e);return n!==-1&&s[t].splice(n,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const s=this._listeners[t.type];if(s!==void 0){t.target=this;for(let n=0,i=s.length;n<i;n++)s[n].call(this,t)}return this}}class lt{constructor(t,e,s,n){t===void 0&&(t=0),e===void 0&&(e=0),s===void 0&&(s=0),n===void 0&&(n=1),this.x=t,this.y=e,this.z=s,this.w=n}set(t,e,s,n){return this.x=t,this.y=e,this.z=s,this.w=n,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const s=Math.sin(e*.5);return this.x=t.x*s,this.y=t.y*s,this.z=t.z*s,this.w=Math.cos(e*.5),this}toAxisAngle(t){t===void 0&&(t=new l),this.normalize();const e=2*Math.acos(this.w),s=Math.sqrt(1-this.w*this.w);return s<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/s,t.y=this.y/s,t.z=this.z/s),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const s=no,n=io;t.tangents(s,n),this.setFromAxisAngle(s,Math.PI)}else{const s=t.cross(e);this.x=s.x,this.y=s.y,this.z=s.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){e===void 0&&(e=new lt);const s=this.x,n=this.y,i=this.z,o=this.w,r=t.x,a=t.y,c=t.z,u=t.w;return e.x=s*u+o*r+n*c-i*a,e.y=n*u+o*a+i*r-s*c,e.z=i*u+o*c+s*a-n*r,e.w=o*u-s*r-n*a-i*c,e}inverse(t){t===void 0&&(t=new lt);const e=this.x,s=this.y,n=this.z,i=this.w;this.conjugate(t);const o=1/(e*e+s*s+n*n+i*i);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t){return t===void 0&&(t=new lt),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){e===void 0&&(e=new l);const s=t.x,n=t.y,i=t.z,o=this.x,r=this.y,a=this.z,c=this.w,u=c*s+r*i-a*n,d=c*n+a*s-o*i,h=c*i+o*n-r*s,f=-o*s-r*n-a*i;return e.x=u*c+f*-o+d*-a-h*-r,e.y=d*c+f*-r+h*-o-u*-a,e.z=h*c+f*-a+u*-r-d*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){e===void 0&&(e="YZX");let s,n,i;const o=this.x,r=this.y,a=this.z,c=this.w;switch(e){case"YZX":const u=o*r+a*c;if(u>.499&&(s=2*Math.atan2(o,c),n=Math.PI/2,i=0),u<-.499&&(s=-2*Math.atan2(o,c),n=-Math.PI/2,i=0),s===void 0){const d=o*o,h=r*r,f=a*a;s=Math.atan2(2*r*c-2*o*a,1-2*h-2*f),n=Math.asin(2*u),i=Math.atan2(2*o*c-2*r*a,1-2*d-2*f)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=s,t.z=n,t.x=i}setFromEuler(t,e,s,n){n===void 0&&(n="XYZ");const i=Math.cos(t/2),o=Math.cos(e/2),r=Math.cos(s/2),a=Math.sin(t/2),c=Math.sin(e/2),u=Math.sin(s/2);return n==="XYZ"?(this.x=a*o*r+i*c*u,this.y=i*c*r-a*o*u,this.z=i*o*u+a*c*r,this.w=i*o*r-a*c*u):n==="YXZ"?(this.x=a*o*r+i*c*u,this.y=i*c*r-a*o*u,this.z=i*o*u-a*c*r,this.w=i*o*r+a*c*u):n==="ZXY"?(this.x=a*o*r-i*c*u,this.y=i*c*r+a*o*u,this.z=i*o*u+a*c*r,this.w=i*o*r-a*c*u):n==="ZYX"?(this.x=a*o*r-i*c*u,this.y=i*c*r+a*o*u,this.z=i*o*u-a*c*r,this.w=i*o*r+a*c*u):n==="YZX"?(this.x=a*o*r+i*c*u,this.y=i*c*r+a*o*u,this.z=i*o*u-a*c*r,this.w=i*o*r-a*c*u):n==="XZY"&&(this.x=a*o*r-i*c*u,this.y=i*c*r-a*o*u,this.z=i*o*u+a*c*r,this.w=i*o*r+a*c*u),this}clone(){return new lt(this.x,this.y,this.z,this.w)}slerp(t,e,s){s===void 0&&(s=new lt);const n=this.x,i=this.y,o=this.z,r=this.w;let a=t.x,c=t.y,u=t.z,d=t.w,h,f,p,w,v;return f=n*a+i*c+o*u+r*d,f<0&&(f=-f,a=-a,c=-c,u=-u,d=-d),1-f>1e-6?(h=Math.acos(f),p=Math.sin(h),w=Math.sin((1-e)*h)/p,v=Math.sin(e*h)/p):(w=1-e,v=e),s.x=w*n+v*a,s.y=w*i+v*c,s.z=w*o+v*u,s.w=w*r+v*d,s}integrate(t,e,s,n){n===void 0&&(n=new lt);const i=t.x*s.x,o=t.y*s.y,r=t.z*s.z,a=this.x,c=this.y,u=this.z,d=this.w,h=e*.5;return n.x+=h*(i*d+o*u-r*c),n.y+=h*(o*d+r*a-i*u),n.z+=h*(r*d+i*c-o*a),n.w+=h*(-i*a-o*c-r*u),n}}const no=new l,io=new l,oo={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class R{constructor(t){t===void 0&&(t={}),this.id=R.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=t.collisionResponse?t.collisionResponse:!0,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,s,n){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}R.idCounter=0;R.types=oo;class K{constructor(t){t===void 0&&(t={}),this.position=new l,this.quaternion=new lt,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return K.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return K.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return e===void 0&&(e=new l),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,s,n){return n===void 0&&(n=new l),s.vsub(t,n),e.conjugate(ws),ws.vmult(n,n),n}static pointToWorldFrame(t,e,s,n){return n===void 0&&(n=new l),e.vmult(s,n),n.vadd(t,n),n}static vectorToWorldFrame(t,e,s){return s===void 0&&(s=new l),t.vmult(e,s),s}static vectorToLocalFrame(t,e,s,n){return n===void 0&&(n=new l),e.w*=-1,e.vmult(s,n),e.w*=-1,n}}const ws=new lt;class re extends R{constructor(t){t===void 0&&(t={});const{vertices:e=[],faces:s=[],normals:n=[],axes:i,boundingSphereRadius:o}=t;super({type:R.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=s,this.faceNormals=n,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=i?i.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,s=this.uniqueEdges;s.length=0;const n=new l;for(let i=0;i!==t.length;i++){const o=t[i],r=o.length;for(let a=0;a!==r;a++){const c=(a+1)%r;e[o[a]].vsub(e[o[c]],n),n.normalize();let u=!1;for(let d=0;d!==s.length;d++)if(s[d].almostEquals(n)||s[d].almostEquals(n)){u=!0;break}u||s.push(n.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let n=0;n<this.faces[t].length;n++)if(!this.vertices[this.faces[t][n]])throw new Error(`Vertex ${this.faces[t][n]} not found!`);const e=this.faceNormals[t]||new l;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const s=this.vertices[this.faces[t][0]];if(e.dot(s)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let n=0;n<this.faces[t].length;n++)console.warn(`.vertices[${this.faces[t][n]}] = Vec3(${this.vertices[this.faces[t][n]].toString()})`)}}}getFaceNormal(t,e){const s=this.faces[t],n=this.vertices[s[0]],i=this.vertices[s[1]],o=this.vertices[s[2]];re.computeNormal(n,i,o,e)}static computeNormal(t,e,s,n){const i=new l,o=new l;e.vsub(t,o),s.vsub(e,i),i.cross(o,n),n.isZero()||n.normalize()}clipAgainstHull(t,e,s,n,i,o,r,a,c){const u=new l;let d=-1,h=-Number.MAX_VALUE;for(let p=0;p<s.faces.length;p++){u.copy(s.faceNormals[p]),i.vmult(u,u);const w=u.dot(o);w>h&&(h=w,d=p)}const f=[];for(let p=0;p<s.faces[d].length;p++){const w=s.vertices[s.faces[d][p]],v=new l;v.copy(w),i.vmult(v,v),n.vadd(v,v),f.push(v)}d>=0&&this.clipFaceAgainstHull(o,t,e,f,r,a,c)}findSeparatingAxis(t,e,s,n,i,o,r,a){const c=new l,u=new l,d=new l,h=new l,f=new l,p=new l;let w=Number.MAX_VALUE;const v=this;if(v.uniqueAxes)for(let y=0;y!==v.uniqueAxes.length;y++){s.vmult(v.uniqueAxes[y],c);const m=v.testSepAxis(c,t,e,s,n,i);if(m===!1)return!1;m<w&&(w=m,o.copy(c))}else{const y=r?r.length:v.faces.length;for(let m=0;m<y;m++){const x=r?r[m]:m;c.copy(v.faceNormals[x]),s.vmult(c,c);const b=v.testSepAxis(c,t,e,s,n,i);if(b===!1)return!1;b<w&&(w=b,o.copy(c))}}if(t.uniqueAxes)for(let y=0;y!==t.uniqueAxes.length;y++){i.vmult(t.uniqueAxes[y],u);const m=v.testSepAxis(u,t,e,s,n,i);if(m===!1)return!1;m<w&&(w=m,o.copy(u))}else{const y=a?a.length:t.faces.length;for(let m=0;m<y;m++){const x=a?a[m]:m;u.copy(t.faceNormals[x]),i.vmult(u,u);const b=v.testSepAxis(u,t,e,s,n,i);if(b===!1)return!1;b<w&&(w=b,o.copy(u))}}for(let y=0;y!==v.uniqueEdges.length;y++){s.vmult(v.uniqueEdges[y],h);for(let m=0;m!==t.uniqueEdges.length;m++)if(i.vmult(t.uniqueEdges[m],f),h.cross(f,p),!p.almostZero()){p.normalize();const x=v.testSepAxis(p,t,e,s,n,i);if(x===!1)return!1;x<w&&(w=x,o.copy(p))}}return n.vsub(e,d),d.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,s,n,i,o){const r=this;re.project(r,t,s,n,Re),re.project(e,t,i,o,ke);const a=Re[0],c=Re[1],u=ke[0],d=ke[1];if(a<d||u<c)return!1;const h=a-d,f=u-c;return h<f?h:f}calculateLocalInertia(t,e){const s=new l,n=new l;this.computeLocalAABB(n,s);const i=s.x-n.x,o=s.y-n.y,r=s.z-n.z;e.x=1/12*t*(2*o*2*o+2*r*2*r),e.y=1/12*t*(2*i*2*i+2*r*2*r),e.z=1/12*t*(2*o*2*o+2*i*2*i)}getPlaneConstantOfFace(t){const e=this.faces[t],s=this.faceNormals[t],n=this.vertices[e[0]];return-s.dot(n)}clipFaceAgainstHull(t,e,s,n,i,o,r){const a=new l,c=new l,u=new l,d=new l,h=new l,f=new l,p=new l,w=new l,v=this,y=[],m=n,x=y;let b=-1,_=Number.MAX_VALUE;for(let L=0;L<v.faces.length;L++){a.copy(v.faceNormals[L]),s.vmult(a,a);const W=a.dot(t);W<_&&(_=W,b=L)}if(b<0)return;const C=v.faces[b];C.connectedFaces=[];for(let L=0;L<v.faces.length;L++)for(let W=0;W<v.faces[L].length;W++)C.indexOf(v.faces[L][W])!==-1&&L!==b&&C.connectedFaces.indexOf(L)===-1&&C.connectedFaces.push(L);const B=C.length;for(let L=0;L<B;L++){const W=v.vertices[C[L]],H=v.vertices[C[(L+1)%B]];W.vsub(H,c),u.copy(c),s.vmult(u,u),e.vadd(u,u),d.copy(this.faceNormals[b]),s.vmult(d,d),e.vadd(d,d),u.cross(d,h),h.negate(h),f.copy(W),s.vmult(f,f),e.vadd(f,f);const S=C.connectedFaces[L];p.copy(this.faceNormals[S]);const F=this.getPlaneConstantOfFace(S);w.copy(p),s.vmult(w,w);const T=F-w.dot(e);for(this.clipFaceAgainstPlane(m,x,w,T);m.length;)m.shift();for(;x.length;)m.push(x.shift())}p.copy(this.faceNormals[b]);const q=this.getPlaneConstantOfFace(b);w.copy(p),s.vmult(w,w);const V=q-w.dot(e);for(let L=0;L<m.length;L++){let W=w.dot(m[L])+V;if(W<=i&&(console.log(`clamped: depth=${W} to minDist=${i}`),W=i),W<=o){const H=m[L];if(W<=1e-6){const S={point:H,normal:w,depth:W};r.push(S)}}}}clipFaceAgainstPlane(t,e,s,n){let i,o;const r=t.length;if(r<2)return e;let a=t[t.length-1],c=t[0];i=s.dot(a)+n;for(let u=0;u<r;u++){if(c=t[u],o=s.dot(c)+n,i<0)if(o<0){const d=new l;d.copy(c),e.push(d)}else{const d=new l;a.lerp(c,i/(i-o),d),e.push(d)}else if(o<0){const d=new l;a.lerp(c,i/(i-o),d),e.push(d),e.push(c)}a=c,i=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new l);const s=this.vertices,n=this.worldVertices;for(let i=0;i!==this.vertices.length;i++)e.vmult(s[i],n[i]),t.vadd(n[i],n[i]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const s=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let n=0;n<this.vertices.length;n++){const i=s[n];i.x<t.x?t.x=i.x:i.x>e.x&&(e.x=i.x),i.y<t.y?t.y=i.y:i.y>e.y&&(e.y=i.y),i.z<t.z?t.z=i.z:i.z>e.z&&(e.z=i.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new l);const s=this.faceNormals,n=this.worldFaceNormals;for(let i=0;i!==e;i++)t.vmult(s[i],n[i]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let s=0;s!==e.length;s++){const n=e[s].lengthSquared();n>t&&(t=n)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,s,n){const i=this.vertices;let o,r,a,c,u,d,h=new l;for(let f=0;f<i.length;f++){h.copy(i[f]),e.vmult(h,h),t.vadd(h,h);const p=h;(o===void 0||p.x<o)&&(o=p.x),(c===void 0||p.x>c)&&(c=p.x),(r===void 0||p.y<r)&&(r=p.y),(u===void 0||p.y>u)&&(u=p.y),(a===void 0||p.z<a)&&(a=p.z),(d===void 0||p.z>d)&&(d=p.z)}s.set(o,r,a),n.set(c,u,d)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){t===void 0&&(t=new l);const e=this.vertices;for(let s=0;s<e.length;s++)t.vadd(e[s],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const s=this.vertices.length,n=this.vertices;if(e){for(let i=0;i<s;i++){const o=n[i];e.vmult(o,o)}for(let i=0;i<this.faceNormals.length;i++){const o=this.faceNormals[i];e.vmult(o,o)}}if(t)for(let i=0;i<s;i++){const o=n[i];o.vadd(t,o)}}pointIsInside(t){const e=this.vertices,s=this.faces,n=this.faceNormals,i=null,o=new l;this.getAveragePointLocal(o);for(let r=0;r<this.faces.length;r++){let a=n[r];const c=e[s[r][0]],u=new l;t.vsub(c,u);const d=a.dot(u),h=new l;o.vsub(c,h);const f=a.dot(h);if(d<0&&f>0||d>0&&f<0)return!1}return i?1:-1}static project(t,e,s,n,i){const o=t.vertices.length,r=ro;let a=0,c=0;const u=ao,d=t.vertices;u.setZero(),K.vectorToLocalFrame(s,n,e,r),K.pointToLocalFrame(s,n,u,u);const h=u.dot(r);c=a=d[0].dot(r);for(let f=1;f<o;f++){const p=d[f].dot(r);p>a&&(a=p),p<c&&(c=p)}if(c-=h,a-=h,c>a){const f=c;c=a,a=f}i[0]=a,i[1]=c}}const Re=[],ke=[];new l;const ro=new l,ao=new l;class Ye extends R{constructor(t){super({type:R.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,s=this.halfExtents.z,n=l,i=[new n(-t,-e,-s),new n(t,-e,-s),new n(t,e,-s),new n(-t,e,-s),new n(-t,-e,s),new n(t,-e,s),new n(t,e,s),new n(-t,e,s)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],r=[new n(0,0,1),new n(0,1,0),new n(1,0,0)],a=new re({vertices:i,faces:o,axes:r});this.convexPolyhedronRepresentation=a,a.material=this.material}calculateLocalInertia(t,e){return e===void 0&&(e=new l),Ye.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,s){const n=t;s.x=1/12*e*(2*n.y*2*n.y+2*n.z*2*n.z),s.y=1/12*e*(2*n.x*2*n.x+2*n.z*2*n.z),s.z=1/12*e*(2*n.y*2*n.y+2*n.x*2*n.x)}getSideNormals(t,e){const s=t,n=this.halfExtents;if(s[0].set(n.x,0,0),s[1].set(0,n.y,0),s[2].set(0,0,n.z),s[3].set(-n.x,0,0),s[4].set(0,-n.y,0),s[5].set(0,0,-n.z),e!==void 0)for(let i=0;i!==s.length;i++)e.vmult(s[i],s[i]);return s}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,s){const n=this.halfExtents,i=[[n.x,n.y,n.z],[-n.x,n.y,n.z],[-n.x,-n.y,n.z],[-n.x,-n.y,-n.z],[n.x,-n.y,-n.z],[n.x,n.y,-n.z],[-n.x,n.y,-n.z],[n.x,-n.y,n.z]];for(let o=0;o<i.length;o++)qt.set(i[o][0],i[o][1],i[o][2]),e.vmult(qt,qt),t.vadd(qt,qt),s(qt.x,qt.y,qt.z)}calculateWorldAABB(t,e,s,n){const i=this.halfExtents;zt[0].set(i.x,i.y,i.z),zt[1].set(-i.x,i.y,i.z),zt[2].set(-i.x,-i.y,i.z),zt[3].set(-i.x,-i.y,-i.z),zt[4].set(i.x,-i.y,-i.z),zt[5].set(i.x,i.y,-i.z),zt[6].set(-i.x,i.y,-i.z),zt[7].set(i.x,-i.y,i.z);const o=zt[0];e.vmult(o,o),t.vadd(o,o),n.copy(o),s.copy(o);for(let r=1;r<8;r++){const a=zt[r];e.vmult(a,a),t.vadd(a,a);const c=a.x,u=a.y,d=a.z;c>n.x&&(n.x=c),u>n.y&&(n.y=u),d>n.z&&(n.z=d),c<s.x&&(s.x=c),u<s.y&&(s.y=u),d<s.z&&(s.z=d)}}}const qt=new l,zt=[new l,new l,new l,new l,new l,new l,new l,new l],Xe={DYNAMIC:1,STATIC:2,KINEMATIC:4},Ze={AWAKE:0,SLEEPY:1,SLEEPING:2};class I extends Ds{constructor(t){t===void 0&&(t={}),super(),this.id=I.idCounter++,this.index=-1,this.world=null,this.vlambda=new l,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse=="boolean"?t.collisionResponse:!0,this.position=new l,this.previousPosition=new l,this.interpolatedPosition=new l,this.initPosition=new l,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new l,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new l,this.force=new l;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?I.STATIC:I.DYNAMIC,typeof t.type==typeof I.STATIC&&(this.type=t.type),this.allowSleep=typeof t.allowSleep<"u"?t.allowSleep:!0,this.sleepState=I.AWAKE,this.sleepSpeedLimit=typeof t.sleepSpeedLimit<"u"?t.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof t.sleepTimeLimit<"u"?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new l,this.quaternion=new lt,this.initQuaternion=new lt,this.previousQuaternion=new lt,this.interpolatedQuaternion=new lt,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new l,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new l,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new l,this.invInertia=new l,this.invInertiaWorld=new Et,this.invMassSolve=0,this.invInertiaSolve=new l,this.invInertiaWorldSolve=new Et,this.fixedRotation=typeof t.fixedRotation<"u"?t.fixedRotation:!1,this.angularDamping=typeof t.angularDamping<"u"?t.angularDamping:.01,this.linearFactor=new l(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new l(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new Ct,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new l,this.isTrigger=!!t.isTrigger,t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=I.AWAKE,this.wakeUpAfterNarrowphase=!1,t===I.SLEEPING&&this.dispatchEvent(I.wakeupEvent)}sleep(){this.sleepState=I.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,s=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),n=this.sleepSpeedLimit**2;e===I.AWAKE&&s<n?(this.sleepState=I.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(I.sleepyEvent)):e===I.SLEEPY&&s>n?this.wakeUp():e===I.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(I.sleepEvent))}}updateSolveMassProperties(){this.sleepState===I.SLEEPING||this.type===I.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return e===void 0&&(e=new l),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return e===void 0&&(e=new l),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return e===void 0&&(e=new l),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return e===void 0&&(e=new l),this.quaternion.vmult(t,e),e}addShape(t,e,s){const n=new l,i=new lt;return e&&n.copy(e),s&&i.copy(s),this.shapes.push(t),this.shapeOffsets.push(n),this.shapeOrientations.push(i),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,s=t.length;let n=0;for(let i=0;i!==s;i++){const o=t[i];o.updateBoundingSphereRadius();const r=e[i].length(),a=o.boundingSphereRadius;r+a>n&&(n=r+a)}this.boundingRadius=n}updateAABB(){const t=this.shapes,e=this.shapeOffsets,s=this.shapeOrientations,n=t.length,i=lo,o=co,r=this.quaternion,a=this.aabb,c=ho;for(let u=0;u!==n;u++){const d=t[u];r.vmult(e[u],i),i.vadd(this.position,i),r.mult(s[u],o),d.calculateWorldAABB(i,o,c.lowerBound,c.upperBound),u===0?a.copy(c):a.extend(c)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(!(e.x===e.y&&e.y===e.z&&!t)){const s=uo,n=fo;s.setRotationFromQuaternion(this.quaternion),s.transpose(n),s.scale(e,s),s.mmult(n,this.invInertiaWorld)}}applyForce(t,e){if(e===void 0&&(e=new l),this.type!==I.DYNAMIC)return;this.sleepState===I.SLEEPING&&this.wakeUp();const s=po;e.cross(t,s),this.force.vadd(t,this.force),this.torque.vadd(s,this.torque)}applyLocalForce(t,e){if(e===void 0&&(e=new l),this.type!==I.DYNAMIC)return;const s=mo,n=vo;this.vectorToWorldFrame(t,s),this.vectorToWorldFrame(e,n),this.applyForce(s,n)}applyTorque(t){this.type===I.DYNAMIC&&(this.sleepState===I.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(e===void 0&&(e=new l),this.type!==I.DYNAMIC)return;this.sleepState===I.SLEEPING&&this.wakeUp();const s=e,n=wo;n.copy(t),n.scale(this.invMass,n),this.velocity.vadd(n,this.velocity);const i=yo;s.cross(t,i),this.invInertiaWorld.vmult(i,i),this.angularVelocity.vadd(i,this.angularVelocity)}applyLocalImpulse(t,e){if(e===void 0&&(e=new l),this.type!==I.DYNAMIC)return;const s=go,n=xo;this.vectorToWorldFrame(t,s),this.vectorToWorldFrame(e,n),this.applyImpulse(s,n)}updateMassProperties(){const t=bo;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,s=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),Ye.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!s?1/e.x:0,e.y>0&&!s?1/e.y:0,e.z>0&&!s?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const s=new l;return t.vsub(this.position,s),this.angularVelocity.cross(s,e),this.velocity.vadd(e,e),e}integrate(t,e,s){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===I.DYNAMIC||this.type===I.KINEMATIC)||this.sleepState===I.SLEEPING)return;const n=this.velocity,i=this.angularVelocity,o=this.position,r=this.force,a=this.torque,c=this.quaternion,u=this.invMass,d=this.invInertiaWorld,h=this.linearFactor,f=u*t;n.x+=r.x*f*h.x,n.y+=r.y*f*h.y,n.z+=r.z*f*h.z;const p=d.elements,w=this.angularFactor,v=a.x*w.x,y=a.y*w.y,m=a.z*w.z;i.x+=t*(p[0]*v+p[1]*y+p[2]*m),i.y+=t*(p[3]*v+p[4]*y+p[5]*m),i.z+=t*(p[6]*v+p[7]*y+p[8]*m),o.x+=n.x*t,o.y+=n.y*t,o.z+=n.z*t,c.integrate(this.angularVelocity,t,this.angularFactor,c),e&&(s?c.normalizeFast():c.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}I.idCounter=0;I.COLLIDE_EVENT_NAME="collide";I.DYNAMIC=Xe.DYNAMIC;I.STATIC=Xe.STATIC;I.KINEMATIC=Xe.KINEMATIC;I.AWAKE=Ze.AWAKE;I.SLEEPY=Ze.SLEEPY;I.SLEEPING=Ze.SLEEPING;I.wakeupEvent={type:"wakeup"};I.sleepyEvent={type:"sleepy"};I.sleepEvent={type:"sleep"};const lo=new l,co=new lt,ho=new Ct,uo=new Et,fo=new Et;new Et;const po=new l,mo=new l,vo=new l,wo=new l,yo=new l,go=new l,xo=new l,bo=new l;class Mo{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,s){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return!(!(t.collisionFilterGroup&e.collisionFilterMask)||!(e.collisionFilterGroup&t.collisionFilterMask)||(t.type&I.STATIC||t.sleepState===I.SLEEPING)&&(e.type&I.STATIC||e.sleepState===I.SLEEPING))}intersectionTest(t,e,s,n){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,s,n):this.doBoundingSphereBroadphase(t,e,s,n)}doBoundingSphereBroadphase(t,e,s,n){const i=Co;e.position.vsub(t.position,i);const o=(t.boundingRadius+e.boundingRadius)**2;i.lengthSquared()<o&&(s.push(t),n.push(e))}doBoundingBoxBroadphase(t,e,s,n){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(s.push(t),n.push(e))}makePairsUnique(t,e){const s=_o,n=So,i=Eo,o=t.length;for(let r=0;r!==o;r++)n[r]=t[r],i[r]=e[r];t.length=0,e.length=0;for(let r=0;r!==o;r++){const a=n[r].id,c=i[r].id,u=a<c?`${a},${c}`:`${c},${a}`;s[u]=r,s.keys.push(u)}for(let r=0;r!==s.keys.length;r++){const a=s.keys.pop(),c=s[a];t.push(n[c]),e.push(i[c]),delete s[a]}}setWorld(t){}static boundingSphereCheck(t,e){const s=new l;t.position.vsub(e.position,s);const n=t.shapes[0],i=e.shapes[0];return Math.pow(n.boundingSphereRadius+i.boundingSphereRadius,2)>s.lengthSquared()}aabbQuery(t,e,s){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const Co=new l;new l;new lt;new l;const _o={keys:[]},So=[],Eo=[];new l;new l;new l;class To extends Mo{constructor(){super()}collisionPairs(t,e,s){const n=t.bodies,i=n.length;let o,r;for(let a=0;a!==i;a++)for(let c=0;c!==a;c++)o=n[a],r=n[c],this.needBroadphaseCollision(o,r)&&this.intersectionTest(o,r,e,s)}aabbQuery(t,e,s){s===void 0&&(s=[]);for(let n=0;n<t.bodies.length;n++){const i=t.bodies[n];i.aabbNeedsUpdate&&i.updateAABB(),i.aabb.overlaps(e)&&s.push(i)}return s}}class Ee{constructor(){this.rayFromWorld=new l,this.rayToWorld=new l,this.hitNormalWorld=new l,this.hitPointWorld=new l,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,s,n,i,o,r){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(s),this.hitPointWorld.copy(n),this.shape=i,this.body=o,this.distance=r}}let Os,Vs,Ws,js,Gs,Us,Hs;const Ke={CLOSEST:1,ANY:2,ALL:4};Os=R.types.SPHERE;Vs=R.types.PLANE;Ws=R.types.BOX;js=R.types.CYLINDER;Gs=R.types.CONVEXPOLYHEDRON;Us=R.types.HEIGHTFIELD;Hs=R.types.TRIMESH;class at{get[Os](){return this._intersectSphere}get[Vs](){return this._intersectPlane}get[Ws](){return this._intersectBox}get[js](){return this._intersectConvex}get[Gs](){return this._intersectConvex}get[Us](){return this._intersectHeightfield}get[Hs](){return this._intersectTrimesh}constructor(t,e){t===void 0&&(t=new l),e===void 0&&(e=new l),this.from=t.clone(),this.to=e.clone(),this.direction=new l,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=at.ANY,this.result=new Ee,this.hasHit=!1,this.callback=s=>{}}intersectWorld(t,e){return this.mode=e.mode||at.ANY,this.result=e.result||new Ee,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=typeof e.collisionFilterMask<"u"?e.collisionFilterMask:-1,this.collisionFilterGroup=typeof e.collisionFilterGroup<"u"?e.collisionFilterGroup:-1,this.checkCollisionResponse=typeof e.checkCollisionResponse<"u"?e.checkCollisionResponse:!0,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(ys),Le.length=0,t.broadphase.aabbQuery(t,ys,Le),this.intersectBodies(Le),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const s=this.checkCollisionResponse;if(s&&!t.collisionResponse||!(this.collisionFilterGroup&t.collisionFilterMask)||!(t.collisionFilterGroup&this.collisionFilterMask))return;const n=zo,i=Po;for(let o=0,r=t.shapes.length;o<r;o++){const a=t.shapes[o];if(!(s&&!a.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],i),t.quaternion.vmult(t.shapeOffsets[o],n),n.vadd(t.position,n),this.intersectShape(a,i,n,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let s=0,n=t.length;!this.result.shouldStop&&s<n;s++)this.intersectBody(t[s])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,s,n){const i=this.from;if(jo(i,this.direction,s)>t.boundingSphereRadius)return;const r=this[t.type];r&&r.call(this,t,e,s,n,t)}_intersectBox(t,e,s,n,i){return this._intersectConvex(t.convexPolyhedronRepresentation,e,s,n,i)}_intersectPlane(t,e,s,n,i){const o=this.from,r=this.to,a=this.direction,c=new l(0,0,1);e.vmult(c,c);const u=new l;o.vsub(s,u);const d=u.dot(c);r.vsub(s,u);const h=u.dot(c);if(d*h>0||o.distanceTo(r)<d)return;const f=c.dot(a);if(Math.abs(f)<this.precision)return;const p=new l,w=new l,v=new l;o.vsub(s,p);const y=-c.dot(p)/f;a.scale(y,w),o.vadd(w,v),this.reportIntersection(c,v,i,n,-1)}getAABB(t){const{lowerBound:e,upperBound:s}=t,n=this.to,i=this.from;e.x=Math.min(n.x,i.x),e.y=Math.min(n.y,i.y),e.z=Math.min(n.z,i.z),s.x=Math.max(n.x,i.x),s.y=Math.max(n.y,i.y),s.z=Math.max(n.z,i.z)}_intersectHeightfield(t,e,s,n,i){t.data,t.elementSize;const o=Ao;o.from.copy(this.from),o.to.copy(this.to),K.pointToLocalFrame(s,e,o.from,o.from),K.pointToLocalFrame(s,e,o.to,o.to),o.updateDirection();const r=Fo;let a,c,u,d;a=c=0,u=d=t.data.length-1;const h=new Ct;o.getAABB(h),t.getIndexOfPosition(h.lowerBound.x,h.lowerBound.y,r,!0),a=Math.max(a,r[0]),c=Math.max(c,r[1]),t.getIndexOfPosition(h.upperBound.x,h.upperBound.y,r,!0),u=Math.min(u,r[0]+1),d=Math.min(d,r[1]+1);for(let f=a;f<u;f++)for(let p=c;p<d;p++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(f,p,h),!!h.overlapsRay(o)){if(t.getConvexTrianglePillar(f,p,!1),K.pointToWorldFrame(s,e,t.pillarOffset,fe),this._intersectConvex(t.pillarConvex,e,fe,n,i,gs),this.result.shouldStop)return;t.getConvexTrianglePillar(f,p,!0),K.pointToWorldFrame(s,e,t.pillarOffset,fe),this._intersectConvex(t.pillarConvex,e,fe,n,i,gs)}}}_intersectSphere(t,e,s,n,i){const o=this.from,r=this.to,a=t.radius,c=(r.x-o.x)**2+(r.y-o.y)**2+(r.z-o.z)**2,u=2*((r.x-o.x)*(o.x-s.x)+(r.y-o.y)*(o.y-s.y)+(r.z-o.z)*(o.z-s.z)),d=(o.x-s.x)**2+(o.y-s.y)**2+(o.z-s.z)**2-a**2,h=u**2-4*c*d,f=Bo,p=No;if(!(h<0))if(h===0)o.lerp(r,h,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,i,n,-1);else{const w=(-u-Math.sqrt(h))/(2*c),v=(-u+Math.sqrt(h))/(2*c);if(w>=0&&w<=1&&(o.lerp(r,w,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,i,n,-1)),this.result.shouldStop)return;v>=0&&v<=1&&(o.lerp(r,v,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,i,n,-1))}}_intersectConvex(t,e,s,n,i,o){const r=Io,a=xs,c=o&&o.faceList||null,u=t.faces,d=t.vertices,h=t.faceNormals,f=this.direction,p=this.from,w=this.to,v=p.distanceTo(w),y=c?c.length:u.length,m=this.result;for(let x=0;!m.shouldStop&&x<y;x++){const b=c?c[x]:x,_=u[b],C=h[b],B=e,q=s;a.copy(d[_[0]]),B.vmult(a,a),a.vadd(q,a),a.vsub(p,a),B.vmult(C,r);const V=f.dot(r);if(Math.abs(V)<this.precision)continue;const L=r.dot(a)/V;if(!(L<0)){f.scale(L,wt),wt.vadd(p,wt),_t.copy(d[_[0]]),B.vmult(_t,_t),q.vadd(_t,_t);for(let W=1;!m.shouldStop&&W<_.length-1;W++){Pt.copy(d[_[W]]),At.copy(d[_[W+1]]),B.vmult(Pt,Pt),B.vmult(At,At),q.vadd(Pt,Pt),q.vadd(At,At);const H=wt.distanceTo(p);!(at.pointInTriangle(wt,_t,Pt,At)||at.pointInTriangle(wt,Pt,_t,At))||H>v||this.reportIntersection(r,wt,i,n,b)}}}}_intersectTrimesh(t,e,s,n,i,o){const r=Ro,a=Vo,c=Wo,u=xs,d=ko,h=Lo,f=qo,p=Oo,w=Do,v=t.indices;t.vertices;const y=this.from,m=this.to,x=this.direction;c.position.copy(s),c.quaternion.copy(e),K.vectorToLocalFrame(s,e,x,d),K.pointToLocalFrame(s,e,y,h),K.pointToLocalFrame(s,e,m,f),f.x*=t.scale.x,f.y*=t.scale.y,f.z*=t.scale.z,h.x*=t.scale.x,h.y*=t.scale.y,h.z*=t.scale.z,f.vsub(h,d),d.normalize();const b=h.distanceSquared(f);t.tree.rayQuery(this,c,a);for(let _=0,C=a.length;!this.result.shouldStop&&_!==C;_++){const B=a[_];t.getNormal(B,r),t.getVertex(v[B*3],_t),_t.vsub(h,u);const q=d.dot(r),V=r.dot(u)/q;if(V<0)continue;d.scale(V,wt),wt.vadd(h,wt),t.getVertex(v[B*3+1],Pt),t.getVertex(v[B*3+2],At);const L=wt.distanceSquared(h);!(at.pointInTriangle(wt,Pt,_t,At)||at.pointInTriangle(wt,_t,Pt,At))||L>b||(K.vectorToWorldFrame(e,r,w),K.pointToWorldFrame(s,e,wt,p),this.reportIntersection(w,p,i,n,B))}a.length=0}reportIntersection(t,e,s,n,i){const o=this.from,r=this.to,a=o.distanceTo(e),c=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(c.hitFaceIndex=typeof i<"u"?i:-1,this.mode){case at.ALL:this.hasHit=!0,c.set(o,r,t,e,s,n,a),c.hasHit=!0,this.callback(c);break;case at.CLOSEST:(a<c.distance||!c.hasHit)&&(this.hasHit=!0,c.hasHit=!0,c.set(o,r,t,e,s,n,a));break;case at.ANY:this.hasHit=!0,c.hasHit=!0,c.set(o,r,t,e,s,n,a),c.shouldStop=!0;break}}static pointInTriangle(t,e,s,n){n.vsub(e,Wt),s.vsub(e,se),t.vsub(e,qe);const i=Wt.dot(Wt),o=Wt.dot(se),r=Wt.dot(qe),a=se.dot(se),c=se.dot(qe);let u,d;return(u=a*r-o*c)>=0&&(d=i*c-o*r)>=0&&u+d<i*a-o*o}}at.CLOSEST=Ke.CLOSEST;at.ANY=Ke.ANY;at.ALL=Ke.ALL;const ys=new Ct,Le=[],se=new l,qe=new l,zo=new l,Po=new lt,wt=new l,_t=new l,Pt=new l,At=new l;new l;new Ee;const gs={faceList:[0]},fe=new l,Ao=new at,Fo=[],Bo=new l,No=new l,Io=new l;new l;new l;const xs=new l,Ro=new l,ko=new l,Lo=new l,qo=new l,Do=new l,Oo=new l;new Ct;const Vo=[],Wo=new K,Wt=new l,pe=new l;function jo(A,t,e){e.vsub(A,Wt);const s=Wt.dot(t);return t.scale(s,pe),pe.vadd(A,pe),e.distanceTo(pe)}class Go{static defaults(t,e){t===void 0&&(t={});for(let s in e)s in t||(t[s]=e[s]);return t}}class bs{constructor(){this.spatial=new l,this.rotational=new l}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class ae{constructor(t,e,s,n){s===void 0&&(s=-1e6),n===void 0&&(n=1e6),this.id=ae.idCounter++,this.minForce=s,this.maxForce=n,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new bs,this.jacobianElementB=new bs,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,s){const n=e,i=t,o=s;this.a=4/(o*(1+4*n)),this.b=4*n/(1+4*n),this.eps=4/(o*o*i*(1+4*n))}computeB(t,e,s){const n=this.computeGW(),i=this.computeGq(),o=this.computeGiMf();return-i*t-n*e-o*s}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.position,o=n.position;return t.spatial.dot(i)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.velocity,o=n.velocity,r=s.angularVelocity,a=n.angularVelocity;return t.multiplyVectors(i,r)+e.multiplyVectors(o,a)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.vlambda,o=n.vlambda,r=s.wlambda,a=n.wlambda;return t.multiplyVectors(i,r)+e.multiplyVectors(o,a)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.force,o=s.torque,r=n.force,a=n.torque,c=s.invMassSolve,u=n.invMassSolve;return i.scale(c,Ms),r.scale(u,Cs),s.invInertiaWorldSolve.vmult(o,_s),n.invInertiaWorldSolve.vmult(a,Ss),t.multiplyVectors(Ms,_s)+e.multiplyVectors(Cs,Ss)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.invMassSolve,o=n.invMassSolve,r=s.invInertiaWorldSolve,a=n.invInertiaWorldSolve;let c=i+o;return r.vmult(t.rotational,me),c+=me.dot(t.rotational),a.vmult(e.rotational,me),c+=me.dot(e.rotational),c}addToWlambda(t){const e=this.jacobianElementA,s=this.jacobianElementB,n=this.bi,i=this.bj,o=Uo;n.vlambda.addScaledVector(n.invMassSolve*t,e.spatial,n.vlambda),i.vlambda.addScaledVector(i.invMassSolve*t,s.spatial,i.vlambda),n.invInertiaWorldSolve.vmult(e.rotational,o),n.wlambda.addScaledVector(t,o,n.wlambda),i.invInertiaWorldSolve.vmult(s.rotational,o),i.wlambda.addScaledVector(t,o,i.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}ae.idCounter=0;const Ms=new l,Cs=new l,_s=new l,Ss=new l,me=new l,Uo=new l;class Ho extends ae{constructor(t,e,s){s===void 0&&(s=1e6),super(t,e,0,s),this.restitution=0,this.ri=new l,this.rj=new l,this.ni=new l}computeB(t){const e=this.a,s=this.b,n=this.bi,i=this.bj,o=this.ri,r=this.rj,a=$o,c=Yo,u=n.velocity,d=n.angularVelocity;n.force,n.torque;const h=i.velocity,f=i.angularVelocity;i.force,i.torque;const p=Xo,w=this.jacobianElementA,v=this.jacobianElementB,y=this.ni;o.cross(y,a),r.cross(y,c),y.negate(w.spatial),a.negate(w.rotational),v.spatial.copy(y),v.rotational.copy(c),p.copy(i.position),p.vadd(r,p),p.vsub(n.position,p),p.vsub(o,p);const m=y.dot(p),x=this.restitution+1,b=x*h.dot(y)-x*u.dot(y)+f.dot(c)-d.dot(a),_=this.computeGiMf();return-m*e-b*s-t*_}getImpactVelocityAlongNormal(){const t=Zo,e=Ko,s=Qo,n=Jo,i=tr;return this.bi.position.vadd(this.ri,s),this.bj.position.vadd(this.rj,n),this.bi.getVelocityAtWorldPoint(s,t),this.bj.getVelocityAtWorldPoint(n,e),t.vsub(e,i),this.ni.dot(i)}}const $o=new l,Yo=new l,Xo=new l,Zo=new l,Ko=new l,Qo=new l,Jo=new l,tr=new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;class Es extends ae{constructor(t,e,s){super(t,e,-s,s),this.ri=new l,this.rj=new l,this.t=new l}computeB(t){this.a;const e=this.b;this.bi,this.bj;const s=this.ri,n=this.rj,i=er,o=sr,r=this.t;s.cross(r,i),n.cross(r,o);const a=this.jacobianElementA,c=this.jacobianElementB;r.negate(a.spatial),i.negate(a.rotational),c.spatial.copy(r),c.rotational.copy(o);const u=this.computeGW(),d=this.computeGiMf();return-u*e-t*d}}const er=new l,sr=new l;class le{constructor(t,e,s){s=Go.defaults(s,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=le.idCounter++,this.materials=[t,e],this.friction=s.friction,this.restitution=s.restitution,this.contactEquationStiffness=s.contactEquationStiffness,this.contactEquationRelaxation=s.contactEquationRelaxation,this.frictionEquationStiffness=s.frictionEquationStiffness,this.frictionEquationRelaxation=s.frictionEquationRelaxation}}le.idCounter=0;class ce{constructor(t){t===void 0&&(t={});let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=ce.idCounter++,this.friction=typeof t.friction<"u"?t.friction:-1,this.restitution=typeof t.restitution<"u"?t.restitution:-1}}ce.idCounter=0;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new at;new l;new l;new l;new l(1,0,0),new l(0,1,0),new l(0,0,1);new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;class Ts extends R{constructor(t){if(super({type:R.types.SPHERE}),this.radius=t!==void 0?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){e===void 0&&(e=new l);const s=2*t*this.radius*this.radius/5;return e.x=s,e.y=s,e.z=s,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,s,n){const i=this.radius,o=["x","y","z"];for(let r=0;r<o.length;r++){const a=o[r];s[a]=t[a]-i,n[a]=t[a]+i}}}new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new Ct;new l;new Ct;new l;new l;new l;new l;new l;new l;new l;new Ct;new l;new K;new Ct;class nr{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&!t.bi.isTrigger&&!t.bj.isTrigger&&this.equations.push(t)}removeEquation(t){const e=this.equations,s=e.indexOf(t);s!==-1&&e.splice(s,1)}removeAllEquations(){this.equations.length=0}}class ir extends nr{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let s=0;const n=this.iterations,i=this.tolerance*this.tolerance,o=this.equations,r=o.length,a=e.bodies,c=a.length,u=t;let d,h,f,p,w,v;if(r!==0)for(let b=0;b!==c;b++)a[b].updateSolveMassProperties();const y=rr,m=ar,x=or;y.length=r,m.length=r,x.length=r;for(let b=0;b!==r;b++){const _=o[b];x[b]=0,m[b]=_.computeB(u),y[b]=1/_.computeC()}if(r!==0){for(let C=0;C!==c;C++){const B=a[C],q=B.vlambda,V=B.wlambda;q.set(0,0,0),V.set(0,0,0)}for(s=0;s!==n;s++){p=0;for(let C=0;C!==r;C++){const B=o[C];d=m[C],h=y[C],v=x[C],w=B.computeGWlambda(),f=h*(d-w-B.eps*v),v+f<B.minForce?f=B.minForce-v:v+f>B.maxForce&&(f=B.maxForce-v),x[C]+=f,p+=f>0?f:-f,B.addToWlambda(f)}if(p*p<i)break}for(let C=0;C!==c;C++){const B=a[C],q=B.velocity,V=B.angularVelocity;B.vlambda.vmul(B.linearFactor,B.vlambda),q.vadd(B.vlambda,q),B.wlambda.vmul(B.angularFactor,B.wlambda),V.vadd(B.wlambda,V)}let b=o.length;const _=1/u;for(;b--;)o[b].multiplier=x[b]*_}return s}}const or=[],rr=[],ar=[];I.STATIC;class lr{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class cr extends lr{constructor(){super(...arguments),this.type=l}constructObject(){return new l}}const st={sphereSphere:R.types.SPHERE,spherePlane:R.types.SPHERE|R.types.PLANE,boxBox:R.types.BOX|R.types.BOX,sphereBox:R.types.SPHERE|R.types.BOX,planeBox:R.types.PLANE|R.types.BOX,convexConvex:R.types.CONVEXPOLYHEDRON,sphereConvex:R.types.SPHERE|R.types.CONVEXPOLYHEDRON,planeConvex:R.types.PLANE|R.types.CONVEXPOLYHEDRON,boxConvex:R.types.BOX|R.types.CONVEXPOLYHEDRON,sphereHeightfield:R.types.SPHERE|R.types.HEIGHTFIELD,boxHeightfield:R.types.BOX|R.types.HEIGHTFIELD,convexHeightfield:R.types.CONVEXPOLYHEDRON|R.types.HEIGHTFIELD,sphereParticle:R.types.PARTICLE|R.types.SPHERE,planeParticle:R.types.PLANE|R.types.PARTICLE,boxParticle:R.types.BOX|R.types.PARTICLE,convexParticle:R.types.PARTICLE|R.types.CONVEXPOLYHEDRON,cylinderCylinder:R.types.CYLINDER,sphereCylinder:R.types.SPHERE|R.types.CYLINDER,planeCylinder:R.types.PLANE|R.types.CYLINDER,boxCylinder:R.types.BOX|R.types.CYLINDER,convexCylinder:R.types.CONVEXPOLYHEDRON|R.types.CYLINDER,heightfieldCylinder:R.types.HEIGHTFIELD|R.types.CYLINDER,particleCylinder:R.types.PARTICLE|R.types.CYLINDER,sphereTrimesh:R.types.SPHERE|R.types.TRIMESH,planeTrimesh:R.types.PLANE|R.types.TRIMESH};class hr{get[st.sphereSphere](){return this.sphereSphere}get[st.spherePlane](){return this.spherePlane}get[st.boxBox](){return this.boxBox}get[st.sphereBox](){return this.sphereBox}get[st.planeBox](){return this.planeBox}get[st.convexConvex](){return this.convexConvex}get[st.sphereConvex](){return this.sphereConvex}get[st.planeConvex](){return this.planeConvex}get[st.boxConvex](){return this.boxConvex}get[st.sphereHeightfield](){return this.sphereHeightfield}get[st.boxHeightfield](){return this.boxHeightfield}get[st.convexHeightfield](){return this.convexHeightfield}get[st.sphereParticle](){return this.sphereParticle}get[st.planeParticle](){return this.planeParticle}get[st.boxParticle](){return this.boxParticle}get[st.convexParticle](){return this.convexParticle}get[st.cylinderCylinder](){return this.convexConvex}get[st.sphereCylinder](){return this.sphereConvex}get[st.planeCylinder](){return this.planeConvex}get[st.boxCylinder](){return this.boxConvex}get[st.convexCylinder](){return this.convexConvex}get[st.heightfieldCylinder](){return this.heightfieldCylinder}get[st.particleCylinder](){return this.particleCylinder}get[st.sphereTrimesh](){return this.sphereTrimesh}get[st.planeTrimesh](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new cr,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,s,n,i,o){let r;this.contactPointPool.length?(r=this.contactPointPool.pop(),r.bi=t,r.bj=e):r=new Ho(t,e),r.enabled=t.collisionResponse&&e.collisionResponse&&s.collisionResponse&&n.collisionResponse;const a=this.currentContactMaterial;r.restitution=a.restitution,r.setSpookParams(a.contactEquationStiffness,a.contactEquationRelaxation,this.world.dt);const c=s.material||t.material,u=n.material||e.material;return c&&u&&c.restitution>=0&&u.restitution>=0&&(r.restitution=c.restitution*u.restitution),r.si=i||s,r.sj=o||n,r}createFrictionEquationsFromContact(t,e){const s=t.bi,n=t.bj,i=t.si,o=t.sj,r=this.world,a=this.currentContactMaterial;let c=a.friction;const u=i.material||s.material,d=o.material||n.material;if(u&&d&&u.friction>=0&&d.friction>=0&&(c=u.friction*d.friction),c>0){const h=c*(r.frictionGravity||r.gravity).length();let f=s.invMass+n.invMass;f>0&&(f=1/f);const p=this.frictionEquationPool,w=p.length?p.pop():new Es(s,n,h*f),v=p.length?p.pop():new Es(s,n,h*f);return w.bi=v.bi=s,w.bj=v.bj=n,w.minForce=v.minForce=-h*f,w.maxForce=v.maxForce=h*f,w.ri.copy(t.ri),w.rj.copy(t.rj),v.ri.copy(t.ri),v.rj.copy(t.rj),t.ni.tangents(w.t,v.t),w.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),v.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),w.enabled=v.enabled=t.enabled,e.push(w,v),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const s=this.frictionResult[this.frictionResult.length-2],n=this.frictionResult[this.frictionResult.length-1];Ot.setZero(),$t.setZero(),Yt.setZero();const i=e.bi;e.bj;for(let r=0;r!==t;r++)e=this.result[this.result.length-1-r],e.bi!==i?(Ot.vadd(e.ni,Ot),$t.vadd(e.ri,$t),Yt.vadd(e.rj,Yt)):(Ot.vsub(e.ni,Ot),$t.vadd(e.rj,$t),Yt.vadd(e.ri,Yt));const o=1/t;$t.scale(o,s.ri),Yt.scale(o,s.rj),n.ri.copy(s.ri),n.rj.copy(s.rj),Ot.normalize(),Ot.tangents(s.t,n.t)}getContacts(t,e,s,n,i,o,r){this.contactPointPool=i,this.frictionEquationPool=r,this.result=n,this.frictionResult=o;const a=fr,c=pr,u=ur,d=dr;for(let h=0,f=t.length;h!==f;h++){const p=t[h],w=e[h];let v=null;p.material&&w.material&&(v=s.getContactMaterial(p.material,w.material)||null);const y=p.type&I.KINEMATIC&&w.type&I.STATIC||p.type&I.STATIC&&w.type&I.KINEMATIC||p.type&I.KINEMATIC&&w.type&I.KINEMATIC;for(let m=0;m<p.shapes.length;m++){p.quaternion.mult(p.shapeOrientations[m],a),p.quaternion.vmult(p.shapeOffsets[m],u),u.vadd(p.position,u);const x=p.shapes[m];for(let b=0;b<w.shapes.length;b++){w.quaternion.mult(w.shapeOrientations[b],c),w.quaternion.vmult(w.shapeOffsets[b],d),d.vadd(w.position,d);const _=w.shapes[b];if(!(x.collisionFilterMask&_.collisionFilterGroup&&_.collisionFilterMask&x.collisionFilterGroup)||u.distanceTo(d)>x.boundingSphereRadius+_.boundingSphereRadius)continue;let C=null;x.material&&_.material&&(C=s.getContactMaterial(x.material,_.material)||null),this.currentContactMaterial=C||v||s.defaultContactMaterial;const B=x.type|_.type,q=this[B];if(q){let V=!1;x.type<_.type?V=q.call(this,x,_,u,d,a,c,p,w,x,_,y):V=q.call(this,_,x,d,u,c,a,w,p,x,_,y),V&&y&&(s.shapeOverlapKeeper.set(x.id,_.id),s.bodyOverlapKeeper.set(p.id,w.id))}}}}}sphereSphere(t,e,s,n,i,o,r,a,c,u,d){if(d)return s.distanceSquared(n)<(t.radius+e.radius)**2;const h=this.createContactEquation(r,a,t,e,c,u);n.vsub(s,h.ni),h.ni.normalize(),h.ri.copy(h.ni),h.rj.copy(h.ni),h.ri.scale(t.radius,h.ri),h.rj.scale(-e.radius,h.rj),h.ri.vadd(s,h.ri),h.ri.vsub(r.position,h.ri),h.rj.vadd(n,h.rj),h.rj.vsub(a.position,h.rj),this.result.push(h),this.createFrictionEquationsFromContact(h,this.frictionResult)}spherePlane(t,e,s,n,i,o,r,a,c,u,d){const h=this.createContactEquation(r,a,t,e,c,u);if(h.ni.set(0,0,1),o.vmult(h.ni,h.ni),h.ni.negate(h.ni),h.ni.normalize(),h.ni.scale(t.radius,h.ri),s.vsub(n,ve),h.ni.scale(h.ni.dot(ve),zs),ve.vsub(zs,h.rj),-ve.dot(h.ni)<=t.radius){if(d)return!0;const f=h.ri,p=h.rj;f.vadd(s,f),f.vsub(r.position,f),p.vadd(n,p),p.vsub(a.position,p),this.result.push(h),this.createFrictionEquationsFromContact(h,this.frictionResult)}}boxBox(t,e,s,n,i,o,r,a,c,u,d){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,s,n,i,o,r,a,t,e,d)}sphereBox(t,e,s,n,i,o,r,a,c,u,d){const h=this.v3pool,f=Or;s.vsub(n,we),e.getSideNormals(f,o);const p=t.radius;let w=!1;const v=Wr,y=jr,m=Gr;let x=null,b=0,_=0,C=0,B=null;for(let E=0,tt=f.length;E!==tt&&w===!1;E++){const G=Lr;G.copy(f[E]);const $=G.length();G.normalize();const pt=we.dot(G);if(pt<$+p&&pt>0){const dt=qr,D=Dr;dt.copy(f[(E+1)%3]),D.copy(f[(E+2)%3]);const Lt=dt.length(),Gt=D.length();dt.normalize(),D.normalize();const Qt=we.dot(dt),Jt=we.dot(D);if(Qt<Lt&&Qt>-Lt&&Jt<Gt&&Jt>-Gt){const te=Math.abs(pt-$-p);if((B===null||te<B)&&(B=te,_=Qt,C=Jt,x=$,v.copy(G),y.copy(dt),m.copy(D),b++,d))return!0}}}if(b){w=!0;const E=this.createContactEquation(r,a,t,e,c,u);v.scale(-p,E.ri),E.ni.copy(v),E.ni.negate(E.ni),v.scale(x,v),y.scale(_,y),v.vadd(y,v),m.scale(C,m),v.vadd(m,E.rj),E.ri.vadd(s,E.ri),E.ri.vsub(r.position,E.ri),E.rj.vadd(n,E.rj),E.rj.vsub(a.position,E.rj),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult)}let q=h.get();const V=Vr;for(let E=0;E!==2&&!w;E++)for(let tt=0;tt!==2&&!w;tt++)for(let G=0;G!==2&&!w;G++)if(q.set(0,0,0),E?q.vadd(f[0],q):q.vsub(f[0],q),tt?q.vadd(f[1],q):q.vsub(f[1],q),G?q.vadd(f[2],q):q.vsub(f[2],q),n.vadd(q,V),V.vsub(s,V),V.lengthSquared()<p*p){if(d)return!0;w=!0;const $=this.createContactEquation(r,a,t,e,c,u);$.ri.copy(V),$.ri.normalize(),$.ni.copy($.ri),$.ri.scale(p,$.ri),$.rj.copy(q),$.ri.vadd(s,$.ri),$.ri.vsub(r.position,$.ri),$.rj.vadd(n,$.rj),$.rj.vsub(a.position,$.rj),this.result.push($),this.createFrictionEquationsFromContact($,this.frictionResult)}h.release(q),q=null;const L=h.get(),W=h.get(),H=h.get(),S=h.get(),F=h.get(),T=f.length;for(let E=0;E!==T&&!w;E++)for(let tt=0;tt!==T&&!w;tt++)if(E%3!==tt%3){f[tt].cross(f[E],L),L.normalize(),f[E].vadd(f[tt],W),H.copy(s),H.vsub(W,H),H.vsub(n,H);const G=H.dot(L);L.scale(G,S);let $=0;for(;$===E%3||$===tt%3;)$++;F.copy(s),F.vsub(S,F),F.vsub(W,F),F.vsub(n,F);const pt=Math.abs(G),dt=F.length();if(pt<f[$].length()&&dt<p){if(d)return!0;w=!0;const D=this.createContactEquation(r,a,t,e,c,u);W.vadd(S,D.rj),D.rj.copy(D.rj),F.negate(D.ni),D.ni.normalize(),D.ri.copy(D.rj),D.ri.vadd(n,D.ri),D.ri.vsub(s,D.ri),D.ri.normalize(),D.ri.scale(p,D.ri),D.ri.vadd(s,D.ri),D.ri.vsub(r.position,D.ri),D.rj.vadd(n,D.rj),D.rj.vsub(a.position,D.rj),this.result.push(D),this.createFrictionEquationsFromContact(D,this.frictionResult)}}h.release(L,W,H,S,F)}planeBox(t,e,s,n,i,o,r,a,c,u,d){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,s,n,i,o,r,a,t,e,d)}convexConvex(t,e,s,n,i,o,r,a,c,u,d,h,f){const p=oa;if(!(s.distanceTo(n)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,s,i,n,o,p,h,f)){const w=[],v=ra;t.clipAgainstHull(s,i,e,n,o,p,-100,100,w);let y=0;for(let m=0;m!==w.length;m++){if(d)return!0;const x=this.createContactEquation(r,a,t,e,c,u),b=x.ri,_=x.rj;p.negate(x.ni),w[m].normal.negate(v),v.scale(w[m].depth,v),w[m].point.vadd(v,b),_.copy(w[m].point),b.vsub(s,b),_.vsub(n,_),b.vadd(s,b),b.vsub(r.position,b),_.vadd(n,_),_.vsub(a.position,_),this.result.push(x),y++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(x,this.frictionResult)}this.enableFrictionReduction&&y&&this.createFrictionFromAverage(y)}}sphereConvex(t,e,s,n,i,o,r,a,c,u,d){const h=this.v3pool;s.vsub(n,Ur);const f=e.faceNormals,p=e.faces,w=e.vertices,v=t.radius;let y=!1;for(let m=0;m!==w.length;m++){const x=w[m],b=Xr;o.vmult(x,b),n.vadd(b,b);const _=Yr;if(b.vsub(s,_),_.lengthSquared()<v*v){if(d)return!0;y=!0;const C=this.createContactEquation(r,a,t,e,c,u);C.ri.copy(_),C.ri.normalize(),C.ni.copy(C.ri),C.ri.scale(v,C.ri),b.vsub(n,C.rj),C.ri.vadd(s,C.ri),C.ri.vsub(r.position,C.ri),C.rj.vadd(n,C.rj),C.rj.vsub(a.position,C.rj),this.result.push(C),this.createFrictionEquationsFromContact(C,this.frictionResult);return}}for(let m=0,x=p.length;m!==x&&y===!1;m++){const b=f[m],_=p[m],C=Zr;o.vmult(b,C);const B=Kr;o.vmult(w[_[0]],B),B.vadd(n,B);const q=Qr;C.scale(-v,q),s.vadd(q,q);const V=Jr;q.vsub(B,V);const L=V.dot(C),W=ta;if(s.vsub(B,W),L<0&&W.dot(C)>0){const H=[];for(let S=0,F=_.length;S!==F;S++){const T=h.get();o.vmult(w[_[S]],T),n.vadd(T,T),H.push(T)}if(kr(H,C,s)){if(d)return!0;y=!0;const S=this.createContactEquation(r,a,t,e,c,u);C.scale(-v,S.ri),C.negate(S.ni);const F=h.get();C.scale(-L,F);const T=h.get();C.scale(-v,T),s.vsub(n,S.rj),S.rj.vadd(T,S.rj),S.rj.vadd(F,S.rj),S.rj.vadd(n,S.rj),S.rj.vsub(a.position,S.rj),S.ri.vadd(s,S.ri),S.ri.vsub(r.position,S.ri),h.release(F),h.release(T),this.result.push(S),this.createFrictionEquationsFromContact(S,this.frictionResult);for(let E=0,tt=H.length;E!==tt;E++)h.release(H[E]);return}else for(let S=0;S!==_.length;S++){const F=h.get(),T=h.get();o.vmult(w[_[(S+1)%_.length]],F),o.vmult(w[_[(S+2)%_.length]],T),n.vadd(F,F),n.vadd(T,T);const E=Hr;T.vsub(F,E);const tt=$r;E.unit(tt);const G=h.get(),$=h.get();s.vsub(F,$);const pt=$.dot(tt);tt.scale(pt,G),G.vadd(F,G);const dt=h.get();if(G.vsub(s,dt),pt>0&&pt*pt<E.lengthSquared()&&dt.lengthSquared()<v*v){if(d)return!0;const D=this.createContactEquation(r,a,t,e,c,u);G.vsub(n,D.rj),G.vsub(s,D.ni),D.ni.normalize(),D.ni.scale(v,D.ri),D.rj.vadd(n,D.rj),D.rj.vsub(a.position,D.rj),D.ri.vadd(s,D.ri),D.ri.vsub(r.position,D.ri),this.result.push(D),this.createFrictionEquationsFromContact(D,this.frictionResult);for(let Lt=0,Gt=H.length;Lt!==Gt;Lt++)h.release(H[Lt]);h.release(F),h.release(T),h.release(G),h.release(dt),h.release($);return}h.release(F),h.release(T),h.release(G),h.release(dt),h.release($)}for(let S=0,F=H.length;S!==F;S++)h.release(H[S])}}}planeConvex(t,e,s,n,i,o,r,a,c,u,d){const h=ea,f=sa;f.set(0,0,1),i.vmult(f,f);let p=0;const w=na;for(let v=0;v!==e.vertices.length;v++)if(h.copy(e.vertices[v]),o.vmult(h,h),n.vadd(h,h),h.vsub(s,w),f.dot(w)<=0){if(d)return!0;const m=this.createContactEquation(r,a,t,e,c,u),x=ia;f.scale(f.dot(w),x),h.vsub(x,x),x.vsub(s,m.ri),m.ni.copy(f),h.vsub(n,m.rj),m.ri.vadd(s,m.ri),m.ri.vsub(r.position,m.ri),m.rj.vadd(n,m.rj),m.rj.vsub(a.position,m.rj),this.result.push(m),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(m,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,s,n,i,o,r,a,c,u,d){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,s,n,i,o,r,a,t,e,d)}sphereHeightfield(t,e,s,n,i,o,r,a,c,u,d){const h=e.data,f=t.radius,p=e.elementSize,w=ya,v=wa;K.pointToLocalFrame(n,o,s,v);let y=Math.floor((v.x-f)/p)-1,m=Math.ceil((v.x+f)/p)+1,x=Math.floor((v.y-f)/p)-1,b=Math.ceil((v.y+f)/p)+1;if(m<0||b<0||y>h.length||x>h[0].length)return;y<0&&(y=0),m<0&&(m=0),x<0&&(x=0),b<0&&(b=0),y>=h.length&&(y=h.length-1),m>=h.length&&(m=h.length-1),b>=h[0].length&&(b=h[0].length-1),x>=h[0].length&&(x=h[0].length-1);const _=[];e.getRectMinMax(y,x,m,b,_);const C=_[0],B=_[1];if(v.z-f>B||v.z+f<C)return;const q=this.result;for(let V=y;V<m;V++)for(let L=x;L<b;L++){const W=q.length;let H=!1;if(e.getConvexTrianglePillar(V,L,!1),K.pointToWorldFrame(n,o,e.pillarOffset,w),s.distanceTo(w)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(H=this.sphereConvex(t,e.pillarConvex,s,w,i,o,r,a,t,e,d)),d&&H||(e.getConvexTrianglePillar(V,L,!0),K.pointToWorldFrame(n,o,e.pillarOffset,w),s.distanceTo(w)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(H=this.sphereConvex(t,e.pillarConvex,s,w,i,o,r,a,t,e,d)),d&&H))return!0;if(q.length-W>2)return}}boxHeightfield(t,e,s,n,i,o,r,a,c,u,d){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,s,n,i,o,r,a,t,e,d)}convexHeightfield(t,e,s,n,i,o,r,a,c,u,d){const h=e.data,f=e.elementSize,p=t.boundingSphereRadius,w=ma,v=va,y=pa;K.pointToLocalFrame(n,o,s,y);let m=Math.floor((y.x-p)/f)-1,x=Math.ceil((y.x+p)/f)+1,b=Math.floor((y.y-p)/f)-1,_=Math.ceil((y.y+p)/f)+1;if(x<0||_<0||m>h.length||b>h[0].length)return;m<0&&(m=0),x<0&&(x=0),b<0&&(b=0),_<0&&(_=0),m>=h.length&&(m=h.length-1),x>=h.length&&(x=h.length-1),_>=h[0].length&&(_=h[0].length-1),b>=h[0].length&&(b=h[0].length-1);const C=[];e.getRectMinMax(m,b,x,_,C);const B=C[0],q=C[1];if(!(y.z-p>q||y.z+p<B))for(let V=m;V<x;V++)for(let L=b;L<_;L++){let W=!1;if(e.getConvexTrianglePillar(V,L,!1),K.pointToWorldFrame(n,o,e.pillarOffset,w),s.distanceTo(w)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(W=this.convexConvex(t,e.pillarConvex,s,w,i,o,r,a,null,null,d,v,null)),d&&W||(e.getConvexTrianglePillar(V,L,!0),K.pointToWorldFrame(n,o,e.pillarOffset,w),s.distanceTo(w)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(W=this.convexConvex(t,e.pillarConvex,s,w,i,o,r,a,null,null,d,v,null)),d&&W))return!0}}sphereParticle(t,e,s,n,i,o,r,a,c,u,d){const h=ha;if(h.set(0,0,1),n.vsub(s,h),h.lengthSquared()<=t.radius*t.radius){if(d)return!0;const p=this.createContactEquation(a,r,e,t,c,u);h.normalize(),p.rj.copy(h),p.rj.scale(t.radius,p.rj),p.ni.copy(h),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}}planeParticle(t,e,s,n,i,o,r,a,c,u,d){const h=aa;h.set(0,0,1),r.quaternion.vmult(h,h);const f=la;if(n.vsub(r.position,f),h.dot(f)<=0){if(d)return!0;const w=this.createContactEquation(a,r,e,t,c,u);w.ni.copy(h),w.ni.negate(w.ni),w.ri.set(0,0,0);const v=ca;h.scale(h.dot(n),v),n.vsub(v,v),w.rj.copy(v),this.result.push(w),this.createFrictionEquationsFromContact(w,this.frictionResult)}}boxParticle(t,e,s,n,i,o,r,a,c,u,d){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,s,n,i,o,r,a,t,e,d)}convexParticle(t,e,s,n,i,o,r,a,c,u,d){let h=-1;const f=da,p=fa;let w=null;const v=ua;if(v.copy(n),v.vsub(s,v),i.conjugate(Ps),Ps.vmult(v,v),t.pointIsInside(v)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(s,i),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(i);for(let y=0,m=t.faces.length;y!==m;y++){const x=[t.worldVertices[t.faces[y][0]]],b=t.worldFaceNormals[y];n.vsub(x[0],As);const _=-b.dot(As);if(w===null||Math.abs(_)<Math.abs(w)){if(d)return!0;w=_,h=y,f.copy(b)}}if(h!==-1){const y=this.createContactEquation(a,r,e,t,c,u);f.scale(w,p),p.vadd(n,p),p.vsub(s,p),y.rj.copy(p),f.negate(y.ni),y.ri.set(0,0,0);const m=y.ri,x=y.rj;m.vadd(n,m),m.vsub(a.position,m),x.vadd(s,x),x.vsub(r.position,x),this.result.push(y),this.createFrictionEquationsFromContact(y,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,s,n,i,o,r,a,c,u,d){return this.convexHeightfield(e,t,n,s,o,i,a,r,c,u,d)}particleCylinder(t,e,s,n,i,o,r,a,c,u,d){return this.convexParticle(e,t,n,s,o,i,a,r,c,u,d)}sphereTrimesh(t,e,s,n,i,o,r,a,c,u,d){const h=Mr,f=Cr,p=_r,w=Sr,v=Er,y=Tr,m=Fr,x=br,b=gr,_=Br;K.pointToLocalFrame(n,o,s,v);const C=t.radius;m.lowerBound.set(v.x-C,v.y-C,v.z-C),m.upperBound.set(v.x+C,v.y+C,v.z+C),e.getTrianglesInAABB(m,_);const B=xr,q=t.radius*t.radius;for(let S=0;S<_.length;S++)for(let F=0;F<3;F++)if(e.getVertex(e.indices[_[S]*3+F],B),B.vsub(v,b),b.lengthSquared()<=q){if(x.copy(B),K.pointToWorldFrame(n,o,x,B),B.vsub(s,b),d)return!0;let T=this.createContactEquation(r,a,t,e,c,u);T.ni.copy(b),T.ni.normalize(),T.ri.copy(T.ni),T.ri.scale(t.radius,T.ri),T.ri.vadd(s,T.ri),T.ri.vsub(r.position,T.ri),T.rj.copy(B),T.rj.vsub(a.position,T.rj),this.result.push(T),this.createFrictionEquationsFromContact(T,this.frictionResult)}for(let S=0;S<_.length;S++)for(let F=0;F<3;F++){e.getVertex(e.indices[_[S]*3+F],h),e.getVertex(e.indices[_[S]*3+(F+1)%3],f),f.vsub(h,p),v.vsub(f,y);const T=y.dot(p);v.vsub(h,y);let E=y.dot(p);if(E>0&&T<0&&(v.vsub(h,y),w.copy(p),w.normalize(),E=y.dot(w),w.scale(E,y),y.vadd(h,y),y.distanceTo(v)<t.radius)){if(d)return!0;const G=this.createContactEquation(r,a,t,e,c,u);y.vsub(v,G.ni),G.ni.normalize(),G.ni.scale(t.radius,G.ri),G.ri.vadd(s,G.ri),G.ri.vsub(r.position,G.ri),K.pointToWorldFrame(n,o,y,y),y.vsub(a.position,G.rj),K.vectorToWorldFrame(o,G.ni,G.ni),K.vectorToWorldFrame(o,G.ri,G.ri),this.result.push(G),this.createFrictionEquationsFromContact(G,this.frictionResult)}}const V=zr,L=Pr,W=Ar,H=yr;for(let S=0,F=_.length;S!==F;S++){e.getTriangleVertices(_[S],V,L,W),e.getNormal(_[S],H),v.vsub(V,y);let T=y.dot(H);if(H.scale(T,y),v.vsub(y,y),T=y.distanceTo(v),at.pointInTriangle(y,V,L,W)&&T<t.radius){if(d)return!0;let E=this.createContactEquation(r,a,t,e,c,u);y.vsub(v,E.ni),E.ni.normalize(),E.ni.scale(t.radius,E.ri),E.ri.vadd(s,E.ri),E.ri.vsub(r.position,E.ri),K.pointToWorldFrame(n,o,y,y),y.vsub(a.position,E.rj),K.vectorToWorldFrame(o,E.ni,E.ni),K.vectorToWorldFrame(o,E.ri,E.ri),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult)}}_.length=0}planeTrimesh(t,e,s,n,i,o,r,a,c,u,d){const h=new l,f=mr;f.set(0,0,1),i.vmult(f,f);for(let p=0;p<e.vertices.length/3;p++){e.getVertex(p,h);const w=new l;w.copy(h),K.pointToWorldFrame(n,o,w,h);const v=vr;if(h.vsub(s,v),f.dot(v)<=0){if(d)return!0;const m=this.createContactEquation(r,a,t,e,c,u);m.ni.copy(f);const x=wr;f.scale(v.dot(f),x),h.vsub(x,x),m.ri.copy(x),m.ri.vsub(r.position,m.ri),m.rj.copy(h),m.rj.vsub(a.position,m.rj),this.result.push(m),this.createFrictionEquationsFromContact(m,this.frictionResult)}}}}const Ot=new l,$t=new l,Yt=new l,ur=new l,dr=new l,fr=new lt,pr=new lt,mr=new l,vr=new l,wr=new l,yr=new l,gr=new l;new l;const xr=new l,br=new l,Mr=new l,Cr=new l,_r=new l,Sr=new l,Er=new l,Tr=new l,zr=new l,Pr=new l,Ar=new l,Fr=new Ct,Br=[],ve=new l,zs=new l,Nr=new l,Ir=new l,Rr=new l;function kr(A,t,e){let s=null;const n=A.length;for(let i=0;i!==n;i++){const o=A[i],r=Nr;A[(i+1)%n].vsub(o,r);const a=Ir;r.cross(t,a);const c=Rr;e.vsub(o,c);const u=a.dot(c);if(s===null||u>0&&s===!0||u<=0&&s===!1){s===null&&(s=u>0);continue}else return!1}return!0}const we=new l,Lr=new l,qr=new l,Dr=new l,Or=[new l,new l,new l,new l,new l,new l],Vr=new l,Wr=new l,jr=new l,Gr=new l,Ur=new l,Hr=new l,$r=new l,Yr=new l,Xr=new l,Zr=new l,Kr=new l,Qr=new l,Jr=new l,ta=new l;new l;new l;const ea=new l,sa=new l,na=new l,ia=new l,oa=new l,ra=new l,aa=new l,la=new l,ca=new l,ha=new l,Ps=new lt,ua=new l;new l;const da=new l,As=new l,fa=new l,pa=new l,ma=new l,va=[0],wa=new l,ya=new l;class Fs{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const s=e;e=t,t=s}return t<<16|e}set(t,e){const s=this.getKey(t,e),n=this.current;let i=0;for(;s>n[i];)i++;if(s!==n[i]){for(let o=n.length-1;o>=i;o--)n[o+1]=n[o];n[i]=s}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const s=this.current,n=this.previous,i=s.length,o=n.length;let r=0;for(let a=0;a<i;a++){let c=!1;const u=s[a];for(;u>n[r];)r++;c=u===n[r],c||Bs(t,u)}r=0;for(let a=0;a<o;a++){let c=!1;const u=n[a];for(;u>s[r];)r++;c=s[r]===u,c||Bs(e,u)}}}function Bs(A,t){A.push((t&4294901760)>>16,t&65535)}const De=(A,t)=>A<t?`${A}-${t}`:`${t}-${A}`;class ga{constructor(){this.data={keys:[]}}get(t,e){const s=De(t,e);return this.data[s]}set(t,e,s){const n=De(t,e);this.get(t,e)||this.data.keys.push(n),this.data[n]=s}delete(t,e){const s=De(t,e),n=this.data.keys.indexOf(s);n!==-1&&this.data.keys.splice(n,1),delete this.data[s]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){const s=e.pop();delete t[s]}}}class xa extends Ds{constructor(t){t===void 0&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0?t.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new l,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new l,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=t.broadphase!==void 0?t.broadphase:new To,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new ir,this.constraints=[],this.narrowphase=new hr(this),this.collisionMatrix=new vs,this.collisionMatrixPrevious=new vs,this.bodyOverlapKeeper=new Fs,this.shapeOverlapKeeper=new Fs,this.contactmaterials=[],this.contactMaterialTable=new ga,this.defaultMaterial=new ce("default"),this.defaultContactMaterial=new le(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,s){s instanceof Ee?this.raycastClosest(t,e,{skipBackfaces:!0},s):this.raycastAll(t,e,{skipBackfaces:!0},s)}raycastAll(t,e,s,n){return s===void 0&&(s={}),s.mode=at.ALL,s.from=t,s.to=e,s.callback=n,Oe.intersectWorld(this,s)}raycastAny(t,e,s,n){return s===void 0&&(s={}),s.mode=at.ANY,s.from=t,s.to=e,s.result=n,Oe.intersectWorld(this,s)}raycastClosest(t,e,s,n){return s===void 0&&(s={}),s.mode=at.CLOSEST,s.from=t,s.to=e,s.result=n,Oe.intersectWorld(this,s)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof I&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,s=this.bodies,n=s.indexOf(t);if(n!==-1){s.splice(n,1);for(let i=0;i!==s.length;i++)s[i].index=i;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let s=0;s<e.length;s++){const n=e[s].shapes;for(let i=0;i<n.length;i++){const o=n[i];if(o.id===t)return o}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);e!==-1&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){t===void 0&&(t=1/60),e===void 0&&(e=10);const s=ht.now()/1e3;if(!this.lastCallTime)this.step(t,void 0,e);else{const n=s-this.lastCallTime;this.step(t,n,e)}this.lastCallTime=s}step(t,e,s){if(s===void 0&&(s=10),e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const n=ht.now();let i=0;for(;this.accumulator>=t&&i<s&&(this.internalStep(t),this.accumulator-=t,i++,!(ht.now()-n>t*1e3)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let r=0;r!==this.bodies.length;r++){const a=this.bodies[r];a.previousPosition.lerp(a.position,o,a.interpolatedPosition),a.previousQuaternion.slerp(a.quaternion,o,a.interpolatedQuaternion),a.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,s=Sa,n=Ea,i=this.bodies.length,o=this.bodies,r=this.solver,a=this.gravity,c=this.doProfiling,u=this.profile,d=I.DYNAMIC;let h=-1/0;const f=this.constraints,p=_a;a.length();const w=a.x,v=a.y,y=a.z;let m=0;for(c&&(h=ht.now()),m=0;m!==i;m++){const S=o[m];if(S.type===d){const F=S.force,T=S.mass;F.x+=T*w,F.y+=T*v,F.z+=T*y}}for(let S=0,F=this.subsystems.length;S!==F;S++)this.subsystems[S].update();c&&(h=ht.now()),s.length=0,n.length=0,this.broadphase.collisionPairs(this,s,n),c&&(u.broadphase=ht.now()-h);let x=f.length;for(m=0;m!==x;m++){const S=f[m];if(!S.collideConnected)for(let F=s.length-1;F>=0;F-=1)(S.bodyA===s[F]&&S.bodyB===n[F]||S.bodyB===s[F]&&S.bodyA===n[F])&&(s.splice(F,1),n.splice(F,1))}this.collisionMatrixTick(),c&&(h=ht.now());const b=Ca,_=e.length;for(m=0;m!==_;m++)b.push(e[m]);e.length=0;const C=this.frictionEquations.length;for(m=0;m!==C;m++)p.push(this.frictionEquations[m]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(s,n,this,e,b,this.frictionEquations,p),c&&(u.narrowphase=ht.now()-h),c&&(h=ht.now()),m=0;m<this.frictionEquations.length;m++)r.addEquation(this.frictionEquations[m]);const B=e.length;for(let S=0;S!==B;S++){const F=e[S],T=F.bi,E=F.bj,tt=F.si,G=F.sj;let $;if(T.material&&E.material?$=this.getContactMaterial(T.material,E.material)||this.defaultContactMaterial:$=this.defaultContactMaterial,$.friction,T.material&&E.material&&(T.material.friction>=0&&E.material.friction>=0&&T.material.friction*E.material.friction,T.material.restitution>=0&&E.material.restitution>=0&&(F.restitution=T.material.restitution*E.material.restitution)),r.addEquation(F),T.allowSleep&&T.type===I.DYNAMIC&&T.sleepState===I.SLEEPING&&E.sleepState===I.AWAKE&&E.type!==I.STATIC){const pt=E.velocity.lengthSquared()+E.angularVelocity.lengthSquared(),dt=E.sleepSpeedLimit**2;pt>=dt*2&&(T.wakeUpAfterNarrowphase=!0)}if(E.allowSleep&&E.type===I.DYNAMIC&&E.sleepState===I.SLEEPING&&T.sleepState===I.AWAKE&&T.type!==I.STATIC){const pt=T.velocity.lengthSquared()+T.angularVelocity.lengthSquared(),dt=T.sleepSpeedLimit**2;pt>=dt*2&&(E.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(T,E,!0),this.collisionMatrixPrevious.get(T,E)||(ne.body=E,ne.contact=F,T.dispatchEvent(ne),ne.body=T,E.dispatchEvent(ne)),this.bodyOverlapKeeper.set(T.id,E.id),this.shapeOverlapKeeper.set(tt.id,G.id)}for(this.emitContactEvents(),c&&(u.makeContactConstraints=ht.now()-h,h=ht.now()),m=0;m!==i;m++){const S=o[m];S.wakeUpAfterNarrowphase&&(S.wakeUp(),S.wakeUpAfterNarrowphase=!1)}for(x=f.length,m=0;m!==x;m++){const S=f[m];S.update();for(let F=0,T=S.equations.length;F!==T;F++){const E=S.equations[F];r.addEquation(E)}}r.solve(t,this),c&&(u.solve=ht.now()-h),r.removeAllEquations();const q=Math.pow;for(m=0;m!==i;m++){const S=o[m];if(S.type&d){const F=q(1-S.linearDamping,t),T=S.velocity;T.scale(F,T);const E=S.angularVelocity;if(E){const tt=q(1-S.angularDamping,t);E.scale(tt,E)}}}this.dispatchEvent(Ma),c&&(h=ht.now());const L=this.stepnumber%(this.quatNormalizeSkip+1)===0,W=this.quatNormalizeFast;for(m=0;m!==i;m++)o[m].integrate(t,L,W);this.clearForces(),this.broadphase.dirty=!0,c&&(u.integrate=ht.now()-h),this.stepnumber+=1,this.dispatchEvent(ba);let H=!0;if(this.allowSleep)for(H=!1,m=0;m!==i;m++){const S=o[m];S.sleepTick(this.time),S.sleepState!==I.SLEEPING&&(H=!0)}this.hasActiveBodies=H}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(Nt,It),t){for(let i=0,o=Nt.length;i<o;i+=2)ie.bodyA=this.getBodyById(Nt[i]),ie.bodyB=this.getBodyById(Nt[i+1]),this.dispatchEvent(ie);ie.bodyA=ie.bodyB=null}if(e){for(let i=0,o=It.length;i<o;i+=2)oe.bodyA=this.getBodyById(It[i]),oe.bodyB=this.getBodyById(It[i+1]),this.dispatchEvent(oe);oe.bodyA=oe.bodyB=null}Nt.length=It.length=0;const s=this.hasAnyEventListener("beginShapeContact"),n=this.hasAnyEventListener("endShapeContact");if((s||n)&&this.shapeOverlapKeeper.getDiff(Nt,It),s){for(let i=0,o=Nt.length;i<o;i+=2){const r=this.getShapeById(Nt[i]),a=this.getShapeById(Nt[i+1]);Rt.shapeA=r,Rt.shapeB=a,r&&(Rt.bodyA=r.body),a&&(Rt.bodyB=a.body),this.dispatchEvent(Rt)}Rt.bodyA=Rt.bodyB=Rt.shapeA=Rt.shapeB=null}if(n){for(let i=0,o=It.length;i<o;i+=2){const r=this.getShapeById(It[i]),a=this.getShapeById(It[i+1]);kt.shapeA=r,kt.shapeB=a,r&&(kt.bodyA=r.body),a&&(kt.bodyB=a.body),this.dispatchEvent(kt)}kt.bodyA=kt.bodyB=kt.shapeA=kt.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let s=0;s!==e;s++){const n=t[s];n.force,n.torque,n.force.set(0,0,0),n.torque.set(0,0,0)}}}new Ct;const Oe=new at,ht=globalThis.performance||{};if(!ht.now){let A=Date.now();ht.timing&&ht.timing.navigationStart&&(A=ht.timing.navigationStart),ht.now=()=>Date.now()-A}new l;const ba={type:"postStep"},Ma={type:"preStep"},ne={type:I.COLLIDE_EVENT_NAME,body:null,contact:null},Ca=[],_a=[],Sa=[],Ea=[],Nt=[],It=[],ie={type:"beginContact",bodyA:null,bodyB:null},oe={type:"endContact",bodyA:null,bodyB:null},Rt={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},kt={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},mt=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];for(let A=0;A<256;A++)mt[256+A]=mt[A];function Ve(A){return A*A*A*(A*(A*6-15)+10)}function Vt(A,t,e){return t+A*(e-t)}function Dt(A,t,e,s){const n=A&15,i=n<8?t:e,o=n<4?e:n==12||n==14?t:s;return(n&1?-i:i)+(n&2?-o:o)}class Ta{noise(t,e,s){const n=Math.floor(t),i=Math.floor(e),o=Math.floor(s),r=n&255,a=i&255,c=o&255;t-=n,e-=i,s-=o;const u=t-1,d=e-1,h=s-1,f=Ve(t),p=Ve(e),w=Ve(s),v=mt[r]+a,y=mt[v]+c,m=mt[v+1]+c,x=mt[r+1]+a,b=mt[x]+c,_=mt[x+1]+c;return Vt(w,Vt(p,Vt(f,Dt(mt[y],t,e,s),Dt(mt[b],u,e,s)),Vt(f,Dt(mt[m],t,d,s),Dt(mt[_],u,d,s))),Vt(p,Vt(f,Dt(mt[y+1],t,e,h),Dt(mt[b+1],u,e,h)),Vt(f,Dt(mt[m+1],t,d,h),Dt(mt[_+1],u,d,h))))}}const za={class:"speed-max"},Pa={class:"speed-gauge1"},Aa={class:"speed-gauge"},Fa={class:"npc-container"},Ba=20,Ns=20,ye=1e5,ge=6e3,Na=`
  uniform float uTime;
  attribute float aSize;
  attribute float aPhase;
  varying float vSize;

  void main(){
    vec3 pos = position;
    pos.x += sin(uTime + aPhase)*0.3;
    pos.y += cos(uTime*1.2 + aPhase)*0.2;
    pos.z += sin(uTime*1.5 + aPhase)*0.2;

    float factor = 0.3 + 0.2*abs(sin(uTime*2.0 + aPhase));
    vSize = aSize*factor;

    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.0);
    gl_PointSize = vSize;
  }
`,Ia=`
  uniform sampler2D uMap;
  void main(){
    vec4 color = texture2D(uMap, gl_PointCoord);
    if(color.a<0.1) discard;
    gl_FragColor = color;
  }
`,xe=.002,Ra=Zt({__name:"IntroAnimation",setup(A){const t={uniforms:{topColor:{value:new vt(255)},bottomColor:{value:new vt(0)},uTime:{value:0}},vertexShader:`
    varying vec2 vUv;
    void main(){
      vUv = uv;
      gl_Position = vec4(position, 1.0);
    }
  `,fragmentShader:`
    uniform vec3 topColor;
    uniform vec3 bottomColor;
    uniform float uTime;
    varying vec2 vUv;

    void main(){
      // 计算渐变因子，这里使用 vUv.y 实现垂直渐变
      float t = vUv.y;

      // 可选：基于时间动态调整渐变
      // float dynamicFactor = 0.5 + 0.5 * sin(uTime);
      // t = mix(t, dynamicFactor, 0.3);

      vec3 color = mix(bottomColor, topColor, t);
      gl_FragColor = vec4(color, 1.0);
    }
  `},e=new Ge(t);wn("toggleMovement",Ks),_e("handleAfterLeave");const s=Mt(null),n=Mt(!1),i=Mt(!1),o=Mt(0),r=Mt(100);let a=0,c,u,d,h,f,p,w,v;const y=[],m=[];let x,b,_=null;const C={w:!1,a:!1,s:!1,d:!1,space:!1,shift:!1};function B(g){(g.key==="w"||g.key==="W")&&(C.w=!0),(g.key==="a"||g.key==="A")&&(C.a=!0),(g.key==="s"||g.key==="S")&&(C.s=!0),(g.key==="d"||g.key==="D")&&(C.d=!0),g.key===" "&&(C.space=!0),g.key==="Shift"&&(C.shift=!0)}function q(g){(g.key==="w"||g.key==="W")&&(C.w=!1),(g.key==="a"||g.key==="A")&&(C.a=!1),(g.key==="s"||g.key==="S")&&(C.s=!1),(g.key==="d"||g.key==="D")&&(C.d=!1),g.key===" "&&(C.space=!1),g.key==="Shift"&&(C.shift=!1)}let V;function L(){ue||V.lock()}function W(g){const M=new Bt(g,64,64),z=new Tt({color:16763904,emissive:16763904,emissiveIntensity:1,roughness:.3,metalness:.1}),P=new ft(M,z),O=new _n(16777215,2,ye*2);return P.add(O),P.rotationAxis=new ut(0,1,0),P.rotationSpeed=.05,P}function H(g){const z=new Ne().load("./img/8ef2ad47f462ffb9784e1caefaf21436.jpeg"),P=new Bt(g,1024,1024),O=new Tt({map:z,emissive:13141,emissiveIntensity:.2,roughness:.5}),k=new ft(P,O);return k.castShadow=!0,k.receiveShadow=!0,k.rotationAxis=new ut(0,1,0),k.rotationSpeed=.1,k}function S(g){const z=new Ne().load("./img/yueqiu.png"),P=new Bt(g,64,64),O=new Tt({map:z,roughness:.8}),k=new ft(P,O);return k.castShadow=!0,k.receiveShadow=!0,k.rotationAxis=new ut(.1,1,0).normalize(),k.rotationSpeed=.05,k}function F(){const g={uTime:{value:0},color1:{value:new vt(`hsl(${Math.random()*360},100%,65%)`)},color2:{value:new vt(`hsl(${Math.random()*360},100%,35%)`)},colorAurora:{value:new vt(`hsl(${Math.random()*360},80%,70%)`)}},M=`
    varying vec3 vPos;
    void main(){
      vPos=position;
      gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);
    }
  `,z=`
    uniform float uTime;
    uniform vec3 color1;
    uniform vec3 color2;
    uniform vec3 colorAurora;
    varying vec3 vPos;

    float swirlNoise(vec3 p){
      float r = length(p.xy);
      float angle = atan(p.y,p.x);
      float swirl = sin(r*0.05 + uTime*0.2 + angle*2.0)*0.5+0.5;
      return swirl;
    }
    void main(){
      float swirl = swirlNoise(vPos);
      vec3 baseColor = mix(color1, color2, swirl);
      float auroraFactor = smoothstep(-100.0,100.0, vPos.y);
      vec3 finalColor = mix(baseColor, colorAurora, auroraFactor*0.4);
      gl_FragColor=vec4(finalColor,1.0);
    }
  `;return new bt({uniforms:g,vertexShader:M,fragmentShader:z})}function T(g){const M=new Bt(g,64,64),z=F(),P=new ft(M,z);return P.castShadow=!0,P.receiveShadow=!0,P.rotationAxis=new ut(Math.random(),1,Math.random()).normalize(),P.rotationSpeed=U.randFloat(.05,.3),P}function E(g){const M=new Bt(g,64,64),z=F(),P=new ft(M,z);P.castShadow=!0,P.receiveShadow=!0;const O=g*1.2,k=g*1.7,Z=2e3,et=new Float32Array(Z*3);for(let j=0;j<Z;j++){const Y=U.randFloat(O,k),X=Math.random()*2*Math.PI,yt=Y*Math.cos(X),ee=Y*Math.sin(X),sn=U.randFloat(-.3,.3);et[j*3+0]=yt,et[j*3+1]=sn,et[j*3+2]=ee}const rt=new We;rt.setAttribute("position",new de(et,3));const ct=new En({map:Qe(),size:.4,color:16777215,blending:je,transparent:!0,depthWrite:!1,opacity:.35}),Q=new as(rt,ct);return P.add(Q),Q.rotation.x=Math.random()*Math.PI,Q.rotation.y=Math.random()*Math.PI,P.rotationAxis=new ut(Math.random(),Math.random(),Math.random()).normalize(),P.rotationSpeed=U.randFloat(.1,.4),P}function tt(g){return E(g)}function G(g){const M=new Bt(g,64,64),z=$(),P=new ls(z),O=new Tt({map:P,emissive:new vt(`hsl(${Math.random()*360},100%,10%)`),emissiveIntensity:.2,roughness:.4}),k=new ft(M,O);return k.castShadow=!0,k.receiveShadow=!0,k.rotationAxis=new ut(Math.random(),Math.random(),Math.random()).normalize(),k.rotationSpeed=U.randFloat(.05,.3),k}function $(){const M=document.createElement("canvas");M.width=256,M.height=256;const z=M.getContext("2d");z.fillStyle="black",z.fillRect(0,0,256,256);const P=U.randInt(2,5);for(let O=0;O<P;O++){const k=Math.random()*256,Z=Math.random()*256,et=Math.random()*256*.5,rt=z.createRadialGradient(k,Z,0,k,Z,et),ct=`hsl(${Math.random()*360},70%,60%)`,Q=`hsl(${Math.random()*360},80%,50%)`,j=`hsl(${Math.random()*360},90%,30%)`;rt.addColorStop(0,ct),rt.addColorStop(.5,Q),rt.addColorStop(1,j),z.beginPath(),z.arc(k,Z,et,0,2*Math.PI),z.fillStyle=rt,z.fill()}return M}const pt=[];function dt(){const g=new Ie,M=new Bt(30,32,32),z=new Tt({color:0,emissive:34,emissiveIntensity:.6,roughness:.9}),P=new ft(M,z);g.add(P);const O=new cs(60,10,32,100),k=D(),Z=new ft(O,k);return Z.rotation.x=Math.PI/2,g.add(Z),g.rotationAxis=new ut(Math.random(),Math.random(),Math.random()).normalize(),g.rotationSpeed=U.randFloat(.1,.3),g}function D(){const g={uTime:{value:0},colorInner:{value:new vt(16750848)},colorOuter:{value:new vt(1114112)}},M=`
    varying vec2 vUv;
    void main(){
      vUv=uv;
      gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);
    }
  `,z=`
    uniform float uTime;
    uniform vec3 colorInner;
    uniform vec3 colorOuter;
    varying vec2 vUv;

    void main(){
      float r = length(vUv-0.5)*2.0;
      float swirl = sin(uTime + 10.0*r)*0.3;
      float mixVal = clamp(r+swirl, 0.0,1.0);
      vec3 col = mix(colorInner, colorOuter, mixVal);
      gl_FragColor=vec4(col,1.0);
    }
  `;return new bt({uniforms:g,vertexShader:M,fragmentShader:z,side:hs})}const Lt=[];function Gt(){const g=new Ie,M=new Bt(20,32,32),z=new Tt({color:5570815,emissive:2228309,emissiveIntensity:.5,roughness:.5}),P=new ft(M,z);g.add(P);const O=new cs(40,8,32,100),k=Qt(),Z=new ft(O,k);return Z.rotation.x=Math.PI/2,g.add(Z),g.rotationAxis=new ut(Math.random(),Math.random(),Math.random()).normalize(),g.rotationSpeed=U.randFloat(.05,.3),g}function Qt(){const g={uTime:{value:0},colorInner:{value:new vt(11141375)},colorOuter:{value:new vt(34)}},M=`
    varying vec2 vUv;
    void main(){
      vUv=uv;
      gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);
    }
  `,z=`
    uniform float uTime;
    uniform vec3 colorInner;
    uniform vec3 colorOuter;
    varying vec2 vUv;

    void main(){
      float r = length(vUv-0.5)*1.5;
      float swirl= sin(uTime*1.5+ 8.0*r)*0.3;
      float mixVal = clamp(r+swirl,0.0,1.0);
      vec3 col = mix(colorInner, colorOuter, mixVal);
      gl_FragColor=vec4(col,1.0);
    }
  `;return new bt({uniforms:g,vertexShader:M,fragmentShader:z,side:hs})}function Jt(g){for(let M=0;M<g;M++){const z=U.randFloat(5,30),P=te(z),O=Math.random()*ye,k=Math.random()*2*Math.PI,Z=Math.acos(2*Math.random()-1);P.position.set(O*Math.sin(Z)*Math.cos(k),O*Math.sin(Z)*Math.sin(k),O*Math.cos(Z)),u.add(P);const et=new Ts(z),rt=new I({mass:1,shape:et,position:new l(P.position.x,P.position.y,P.position.z),velocity:new l(U.randFloatSpread(10),U.randFloatSpread(10),U.randFloatSpread(10))});rt.addEventListener("collide",ct=>{const Q=P.material;Q.emissive.set(16711680),setTimeout(()=>{Q.emissive.set(1118481)},300)}),v.addBody(rt),y.push({mesh:P,body:rt})}}function te(g){const z=new Sn(g,3),P=new Ta,O=z.attributes.position;for(let Q=0;Q<O.count;Q++){const j=O.getX(Q),Y=O.getY(Q),X=O.getZ(Q),ee=P.noise(j*.1,Y*.1,X*.1)*2;O.setXYZ(Q,j+ee,Y+ee,X+ee)}O.needsUpdate=!0,z.computeVertexNormals();const k=new Ne,Z=k.load("./img/9199c4502853ca342112294e608a011d.jpg"),et=k.load("./img/9199c4502853ca342112294e608a011d.jpg"),rt=new Tt({map:Z,normalMap:et,roughness:.9,emissive:new vt(1118481),emissiveIntensity:.2}),ct=new ft(z,rt);return ct.castShadow=!0,ct.receiveShadow=!0,ct.rotationAxis=new ut(Math.random(),Math.random(),Math.random()).normalize(),ct.rotationSpeed=U.randFloat(.2,1),ct}function $s(){const g=new Float32Array(ge*3),M=new Float32Array(ge),z=new Float32Array(ge);for(let O=0;O<ge;O++){const k=Math.random()*ye,Z=Math.random()*2*Math.PI,et=Math.acos(2*Math.random()-1),rt=k*Math.sin(et)*Math.cos(Z),ct=k*Math.sin(et)*Math.sin(Z),Q=k*Math.cos(et);g[O*3+0]=rt,g[O*3+1]=ct,g[O*3+2]=Q,M[O]=1+Math.random()*2,z[O]=Math.random()*Math.PI*2}x=new We,x.setAttribute("position",new de(g,3)),x.setAttribute("aSize",new de(M,1)),x.setAttribute("aPhase",new de(z,1));const P=Qe();b=new bt({uniforms:{uTime:{value:0},uMap:{value:P}},vertexShader:Na,fragmentShader:Ia,transparent:!0,blending:je,depthWrite:!1}),_=new as(x,b),u.add(_)}function Qe(){const M=document.createElement("canvas");M.width=64,M.height=64;const z=M.getContext("2d"),P=z.createRadialGradient(64/2,64/2,0,64/2,64/2,64/2);return P.addColorStop(0,"rgba(255,255,255,1)"),P.addColorStop(.2,"rgba(255,255,255,1)"),P.addColorStop(.4,"rgba(255,255,255,0.8)"),P.addColorStop(1,"rgba(255,255,255,0)"),z.fillStyle=P,z.fillRect(0,0,64,64),z.fill(),new ls(M)}function Ys(){v=new xa({gravity:new l(0,0,0)});const g=new ce("default"),M=new le(g,g,{friction:.01,restitution:.9});v.addContactMaterial(M),v.defaultContactMaterial=M}function Xs(){if(!s.value)return;u=new gn,u.background=new vt(0);const g=s.value.clientWidth,M=s.value.clientHeight;d=new xn(75,g/M,.1,ye*2),d.position.set(0,100,300),h=new bn({antialias:!0}),h.setSize(g,M),h.shadowMap.enabled=!0,s.value.appendChild(h.domElement);const z=new Mn(16777215,.2);u.add(z);const P=new Cn(16777215,.6);P.position.set(5e3,5e3,5e3),P.castShadow=!0,u.add(P),Zs(g,M),ue||(V=new Vi(d,h.domElement),u.add(V.getObject())),$s();const O=W(2e3);O.position.set(-7e3,0,0),u.add(O);const k=H(80);k.position.set(0,100,-100),u.add(k);const Z=S(30);k.add(Z),Z.position.set(300,0,0),Jt(80)}function Zs(g,M){const z=new Zi(u,d),P=new Ge(t);p=new Qi,p.enabled=!0,c=window.setTimeout(()=>{p.enabled=!1},3e3),w=new Xt(new St(g,M),2,.3,.4),f=new Xi(h),f.addPass(P),f.addPass(z),f.addPass(w),f.addPass(p)}function Ks(){n.value=!n.value}function Qs(){const g=U.randInt(0,6);let M,z=50;g===0?(M=T(U.randFloat(50,120)),z=80):g===1?(M=tt(U.randFloat(60,120)),z=90):g===2?(M=G(U.randFloat(40,100)),z=70):g===3?(M=dt(),z=60):g===4?(M=Gt(),z=50):g===5?(M=te(U.randFloat(10,40)),z=30):(M=Js(U.randFloat(3,10)),z=10);const P=U.randFloat(1e3,3e3),O=Math.random()*2*Math.PI,k=Math.acos(2*Math.random()-1),Z=P*Math.sin(k)*Math.cos(O),et=P*Math.sin(k)*Math.sin(O),rt=P*Math.cos(k),ct=d.position.clone();M.position.set(ct.x+Z,ct.y+et,ct.z+rt),u.add(M);const Q=new Ts(z),j=new I({mass:1,shape:Q,position:new l(M.position.x,M.position.y,M.position.z),velocity:new l(U.randFloatSpread(20),U.randFloatSpread(20),U.randFloatSpread(20))});j.addEventListener("collide",Y=>{if(M instanceof Ie)M.traverse(X=>{X instanceof ft&&X.material instanceof Tt&&X.material.emissive.set(16711680)}),setTimeout(()=>{M.traverse(X=>{X instanceof ft&&X.material instanceof Tt&&X.material.emissive.set(0)})},300);else{const X=M.material;X.emissive.set(16711680),setTimeout(()=>{X.emissive.set(1118481)},300)}}),v.addBody(j),m.push({mesh:M,body:j})}function Js(g){const M=new Bt(g,16,16),z=new Tt({color:16777215,emissive:16777215,emissiveIntensity:1,roughness:.2}),P=new ft(M,z);return P.rotationAxis=new ut(Math.random(),Math.random(),Math.random()).normalize(),P.rotationSpeed=U.randFloat(.05,.3),P}let Te;function tn(){Te=window.setInterval(()=>{const g=U.randInt(1,3);for(let M=0;M<g;M++)Qs()},5*1e3)}function en(){if(i.value)return;const g=new Ls;let M=0;const z=1/60;let P=0;function O(){if(i.value)return;a=requestAnimationFrame(O);const k=g.getDelta();for(P+=k,M+=k,b&&(b.uniforms.uTime.value=P);M>=z;)v.step(z),M-=z;y.forEach(({mesh:j,body:Y})=>{j.position.set(Y.position.x,Y.position.y,Y.position.z),j.quaternion.set(Y.quaternion.x,Y.quaternion.y,Y.quaternion.z,Y.quaternion.w);const X=j.rotationAxis,yt=j.rotationSpeed;X&&yt&&j.rotateOnAxis(X,yt*k)}),m.forEach(({mesh:j,body:Y})=>{j.position.set(Y.position.x,Y.position.y,Y.position.z),j.quaternion.set(Y.quaternion.x,Y.quaternion.y,Y.quaternion.z,Y.quaternion.w);const X=j.rotationAxis,yt=j.rotationSpeed;X&&yt&&j.rotateOnAxis(X,yt*k)}),pt.forEach(j=>{j.rotateOnAxis(j.rotationAxis,j.rotationSpeed*k),j.children.forEach(Y=>{if(Y.material instanceof bt){const X=Y.material;X.uniforms&&X.uniforms.uTime&&(X.uniforms.uTime.value=P)}})}),Lt.forEach(j=>{j.rotateOnAxis(j.rotationAxis,j.rotationSpeed*k),j.children.forEach(Y=>{if(Y.material instanceof bt){const X=Y.material;X.uniforms&&X.uniforms.uTime&&(X.uniforms.uTime.value=P)}})}),u.traverse(j=>{if(j.type==="Mesh"&&j.rotationAxis){const Y=j.rotationAxis,X=j.rotationSpeed;Y&&X&&j.rotateOnAxis(Y,X*k);const yt=j.material;yt&&yt.uniforms&&yt.uniforms.uTime&&(yt.uniforms.uTime.value=P)}});const Z=300,et=new ut(0,0,-1).applyQuaternion(d.quaternion).normalize(),rt=new ut().copy(et).cross(d.up).normalize(),ct=d.up.clone().normalize(),Q=new ut;C.w&&Q.add(et),C.s&&Q.addScaledVector(et,-1),C.a&&Q.addScaledVector(rt,-1),C.d&&Q.add(rt),C.space&&Q.add(ct),C.shift&&Q.addScaledVector(ct,-1),Q.length()>0&&(Q.normalize(),d.position.addScaledVector(Q,Z*k)),n.value?(o.value<r.value?(o.value+=Ba*k,o.value>r.value&&(o.value=r.value)):o.value>r.value?(o.value-=Ns*k,o.value<r.value&&(o.value=r.value)):o.value+=U.randFloat(-1,1)*.1,d.position.addScaledVector(et,o.value*k)):o.value>0&&(o.value-=Ns*k,o.value<0&&(o.value=0)),e.material.uniforms.uTime.value=P,f.render()}O()}function Je(g,M){const z=M.clientX-g.clientX,P=M.clientY-g.clientY;return Math.sqrt(z*z+P*P)}let ze=0,Pe=0,he=!1,Ae=0,ts=75,Fe={x:0,y:0},Be={x:0,y:0};const ue=/Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);function es(g){g.touches.length===1?(he=!0,ze=g.touches[0].clientX,Pe=g.touches[0].clientY):g.touches.length===2&&(he=!1,Ae=Je(g.touches[0],g.touches[1]),ts=d.fov,Be={x:d.rotation.x,y:d.rotation.y},Fe={x:(g.touches[1].clientY-g.touches[0].clientY)/2,y:(g.touches[1].clientX-g.touches[0].clientX)/2})}function ss(g){if(he&&g.touches.length===1){const M=g.touches[0].clientX,z=g.touches[0].clientY,P=(M-ze)*xe,O=(z-Pe)*xe;d.rotation.y-=P,d.rotation.x-=O,ze=M,Pe=z}else if(g.touches.length===2){const M=g.touches[0],z=g.touches[1],O=Je(M,z)-Ae,k=.05;d.fov=ts-O*k,d.fov=U.clamp(d.fov,30,100),d.updateProjectionMatrix();const Z={x:(z.clientY-M.clientY)/2,y:(z.clientX-M.clientX)/2},et={x:Z.x-Fe.x,y:Z.y-Fe.y};d.rotation.x=Be.x-et.x*xe,d.rotation.y=Be.y-et.y*xe}}function ns(g){g.touches.length<2&&(Ae=0),g.touches.length===0&&(he=!1)}function is(){if(!s.value)return;const g=s.value.clientWidth,M=s.value.clientHeight;d.aspect=g/M,d.updateProjectionMatrix(),h.setSize(g,M),f.setSize(g,M)}return Ue(()=>{Ys(),Xs(),window.addEventListener("resize",is),window.addEventListener("keydown",B),window.addEventListener("keyup",q),ue&&(window.addEventListener("touchstart",es,{passive:!1}),window.addEventListener("touchmove",ss,{passive:!1}),window.addEventListener("touchend",ns,{passive:!1})),en(),tn()}),yn(()=>{window.removeEventListener("resize",is),window.removeEventListener("keydown",B),window.removeEventListener("keyup",q),ue&&(window.removeEventListener("touchstart",es),window.removeEventListener("touchmove",ss),window.removeEventListener("touchend",ns)),cancelAnimationFrame(a),h.dispose(),c&&clearTimeout(c),Te&&clearInterval(Te),_&&(u.remove(_),x.dispose(),b.dispose()),m.forEach(({mesh:g})=>{u.remove(g),g instanceof ft?(g.geometry.dispose(),g.material.dispose()):g.traverse(M=>{M instanceof ft&&(M.geometry.dispose(),M.material.dispose())})})}),(g,M)=>{const z=Li;return nt(),it("div",{ref_key:"container",ref:s,class:"particle-background"},[M[5]||(M[5]=N("div",{class:"overlay"},null,-1)),N("div",za,[N("div",Pa,[M[0]||(M[0]=N("span",{style:{color:"coral"}},"KM",-1)),M[1]||(M[1]=N("span",{class:"speed-gauge",style:{"font-size":"23px"}},"/",-1)),M[2]||(M[2]=N("span",{style:{color:"gold"}},"ms",-1)),M[3]||(M[3]=N("span",{class:"speed-gauge",style:{margin:"0 5px"}},":",-1)),N("span",Aa,xt(o.value.toFixed(2)),1)])]),N("div",{class:"move-button-container"},[N("div",{onClick:L,class:"move-button"},"PC-Control"),M[4]||(M[4]=N("div",{style:{position:"fixed",top:"230px",left:"10px",color:"#fff","z-index":"9999"}}," Control:WASD+shift+space ",-1))]),N("div",Fa,[ot(z)])],512)}}}),ka=jt(Ra,[["__scopeId","data-v-9701bef7"]]),La={};function qa(A,t){const e=ka;return nt(),ks(e)}const Oa=jt(La,[["render",qa]]);export{Oa as default};
